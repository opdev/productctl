// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package genpyxis

import (
	"context"
	"encoding/json"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// ApplyComponentResponse is returned by ApplyComponent on success.
type ApplyComponentResponse struct {
	// Partially update a certification project.
	Update_certification_project *MutateComponentCommonResponse `json:"update_certification_project"`
}

// GetUpdate_certification_project returns ApplyComponentResponse.Update_certification_project, and is useful for accessing the field via an interface.
func (v *ApplyComponentResponse) GetUpdate_certification_project() *MutateComponentCommonResponse {
	return v.Update_certification_project
}

// ApplyProductListingResponse is returned by ApplyProductListing on success.
type ApplyProductListingResponse struct {
	// Update product listing.
	Update_product_listing *MutateProductListingCommonResponse `json:"update_product_listing"`
}

// GetUpdate_product_listing returns ApplyProductListingResponse.Update_product_listing, and is useful for accessing the field via an interface.
func (v *ApplyProductListingResponse) GetUpdate_product_listing() *MutateProductListingCommonResponse {
	return v.Update_product_listing
}

// ArchiveComponentResponse is returned by ArchiveComponent on success.
type ArchiveComponentResponse struct {
	// Partially update a certification project.
	Update_certification_project *ArchiveComponentUpdate_certification_projectCertificationProjectResponse `json:"update_certification_project"`
}

// GetUpdate_certification_project returns ArchiveComponentResponse.Update_certification_project, and is useful for accessing the field via an interface.
func (v *ArchiveComponentResponse) GetUpdate_certification_project() *ArchiveComponentUpdate_certification_projectCertificationProjectResponse {
	return v.Update_certification_project
}

// ArchiveComponentUpdate_certification_projectCertificationProjectResponse includes the requested fields of the GraphQL type CertificationProjectResponse.
type ArchiveComponentUpdate_certification_projectCertificationProjectResponse struct {
	Data  *ArchiveComponentUpdate_certification_projectCertificationProjectResponseDataCertificationProject `json:"data"`
	Error *ArchiveComponentUpdate_certification_projectCertificationProjectResponseError                    `json:"error"`
}

// GetData returns ArchiveComponentUpdate_certification_projectCertificationProjectResponse.Data, and is useful for accessing the field via an interface.
func (v *ArchiveComponentUpdate_certification_projectCertificationProjectResponse) GetData() *ArchiveComponentUpdate_certification_projectCertificationProjectResponseDataCertificationProject {
	return v.Data
}

// GetError returns ArchiveComponentUpdate_certification_projectCertificationProjectResponse.Error, and is useful for accessing the field via an interface.
func (v *ArchiveComponentUpdate_certification_projectCertificationProjectResponse) GetError() *ArchiveComponentUpdate_certification_projectCertificationProjectResponseError {
	return v.Error
}

// ArchiveComponentUpdate_certification_projectCertificationProjectResponseDataCertificationProject includes the requested fields of the GraphQL type CertificationProject.
// The GraphQL type's documentation follows.
//
// Contain Certification project data.
type ArchiveComponentUpdate_certification_projectCertificationProjectResponseDataCertificationProject struct {
	// MongoDB unique _id
	Id string `json:"_id"`
	// The date when the entry was last updated.
	Last_update_date *time.Time `json:"last_update_date"`
	// Status of the certification project.
	Project_status string `json:"project_status"`
}

// GetId returns ArchiveComponentUpdate_certification_projectCertificationProjectResponseDataCertificationProject.Id, and is useful for accessing the field via an interface.
func (v *ArchiveComponentUpdate_certification_projectCertificationProjectResponseDataCertificationProject) GetId() string {
	return v.Id
}

// GetLast_update_date returns ArchiveComponentUpdate_certification_projectCertificationProjectResponseDataCertificationProject.Last_update_date, and is useful for accessing the field via an interface.
func (v *ArchiveComponentUpdate_certification_projectCertificationProjectResponseDataCertificationProject) GetLast_update_date() *time.Time {
	return v.Last_update_date
}

// GetProject_status returns ArchiveComponentUpdate_certification_projectCertificationProjectResponseDataCertificationProject.Project_status, and is useful for accessing the field via an interface.
func (v *ArchiveComponentUpdate_certification_projectCertificationProjectResponseDataCertificationProject) GetProject_status() string {
	return v.Project_status
}

// ArchiveComponentUpdate_certification_projectCertificationProjectResponseError includes the requested fields of the GraphQL type ResponseError.
type ArchiveComponentUpdate_certification_projectCertificationProjectResponseError struct {
	Status int    `json:"status"`
	Detail string `json:"detail"`
}

// GetStatus returns ArchiveComponentUpdate_certification_projectCertificationProjectResponseError.Status, and is useful for accessing the field via an interface.
func (v *ArchiveComponentUpdate_certification_projectCertificationProjectResponseError) GetStatus() int {
	return v.Status
}

// GetDetail returns ArchiveComponentUpdate_certification_projectCertificationProjectResponseError.Detail, and is useful for accessing the field via an interface.
func (v *ArchiveComponentUpdate_certification_projectCertificationProjectResponseError) GetDetail() string {
	return v.Detail
}

// Contact info.
type CertProjectContactsInput struct {
	Email_address string `json:"email_address,omitempty"`
	Type          string `json:"type,omitempty"`
}

// GetEmail_address returns CertProjectContactsInput.Email_address, and is useful for accessing the field via an interface.
func (v *CertProjectContactsInput) GetEmail_address() string { return v.Email_address }

// GetType returns CertProjectContactsInput.Type, and is useful for accessing the field via an interface.
func (v *CertProjectContactsInput) GetType() string { return v.Type }

// Container related information.
type CertProjectContainerInput struct {
	// Indicates if the registry is air-gapped and its tags should not be synced.
	Airgap_registry bool `json:"airgap_registry,omitempty"`
	// The application categories (types).
	Application_categories []string `json:"application_categories,omitempty"`
	// Once a container is certified it is automatically published.
	Auto_publish bool `json:"auto_publish,omitempty"`
	// This value of this field is related to certProject.type field. See ISV-2012.
	Build_categories string `json:"build_categories,omitempty"`
	// Distribution approval obtained.
	Distribution_approval bool `json:"distribution_approval,omitempty"`
	// Distribution method.
	Distribution_method string `json:"distribution_method,omitempty"`
	// ID of the project in for ISV repositories.
	Isv_pid string `json:"isv_pid,omitempty"`
	// Kubernetes objects for operator registry projects. Value has to be a valid YAML.
	Kube_objects string `json:"kube_objects,omitempty"`
	// Docker config for operator registry projects. Value has to be a valid JSON.
	Docker_config_json string `json:"docker_config_json,omitempty"`
	// OS Content Type.
	Os_content_type string `json:"os_content_type,omitempty"`
	// Passed RH Cert.
	Passed_rhcert bool `json:"passed_rhcert,omitempty"`
	// A container needs to run in a privileged state.
	Privileged bool `json:"privileged,omitempty"`
	// Flag that indicates that project is using Red Hat hosted registry.
	Hosted_registry bool `json:"hosted_registry,omitempty"`
	// Hostname of the registry where the repository can be accessed.
	// Examples: registry.company.com assumes the default port, 443. registry.company.com:5000 repository path with optional port specified.
	// It is only applicable for projects with an 'external' distribution method.
	Registry             string                    `json:"registry,omitempty"`
	Registry_credentials *RegistryCredentialsInput `json:"registry_credentials,omitempty"`
	// Note: These instructions will be displayed in the Red Hat Container Catalog as is. Please modify the following template as it suits your needs.
	Registry_override_instruct string `json:"registry_override_instruct,omitempty"`
	// Release category.
	Release_category string `json:"release_category,omitempty"`
	// Path to the container repository as found in the registry.
	//
	// Examples:
	// path/to/repository
	// repository
	//
	// This field can only be edited when there are no published containers.
	// It is only applicable for projects with an 'external' distribution method.
	Repository string `json:"repository,omitempty"`
	// The repository description is displayed on the container
	// catalog repository overview page.
	Repository_description string `json:"repository_description,omitempty"`
	// This should represent your product (or the component if your product consists of multiple containers)
	// and a major version. For example, you could use names like jboss-server7, or agent5.
	//
	// This value is only editable when there are no published containers in this project.
	// It is only applicable for projects that do not have the 'external' distribution method.
	Repository_name string `json:"repository_name,omitempty"`
	// Short description of the container.
	Short_description string `json:"short_description,omitempty"`
	// Container type.
	// Field is required, if project type is 'Container', and the field is immutable for Partners after creation.
	Type string `json:"type,omitempty"`
	// GitHub users authorized to submit a certification pull request.
	Github_usernames []string `json:"github_usernames,omitempty"`
}

// GetAirgap_registry returns CertProjectContainerInput.Airgap_registry, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetAirgap_registry() bool { return v.Airgap_registry }

// GetApplication_categories returns CertProjectContainerInput.Application_categories, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetApplication_categories() []string {
	return v.Application_categories
}

// GetAuto_publish returns CertProjectContainerInput.Auto_publish, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetAuto_publish() bool { return v.Auto_publish }

// GetBuild_categories returns CertProjectContainerInput.Build_categories, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetBuild_categories() string { return v.Build_categories }

// GetDistribution_approval returns CertProjectContainerInput.Distribution_approval, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetDistribution_approval() bool { return v.Distribution_approval }

// GetDistribution_method returns CertProjectContainerInput.Distribution_method, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetDistribution_method() string { return v.Distribution_method }

// GetIsv_pid returns CertProjectContainerInput.Isv_pid, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetIsv_pid() string { return v.Isv_pid }

// GetKube_objects returns CertProjectContainerInput.Kube_objects, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetKube_objects() string { return v.Kube_objects }

// GetDocker_config_json returns CertProjectContainerInput.Docker_config_json, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetDocker_config_json() string { return v.Docker_config_json }

// GetOs_content_type returns CertProjectContainerInput.Os_content_type, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetOs_content_type() string { return v.Os_content_type }

// GetPassed_rhcert returns CertProjectContainerInput.Passed_rhcert, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetPassed_rhcert() bool { return v.Passed_rhcert }

// GetPrivileged returns CertProjectContainerInput.Privileged, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetPrivileged() bool { return v.Privileged }

// GetHosted_registry returns CertProjectContainerInput.Hosted_registry, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetHosted_registry() bool { return v.Hosted_registry }

// GetRegistry returns CertProjectContainerInput.Registry, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetRegistry() string { return v.Registry }

// GetRegistry_credentials returns CertProjectContainerInput.Registry_credentials, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetRegistry_credentials() *RegistryCredentialsInput {
	return v.Registry_credentials
}

// GetRegistry_override_instruct returns CertProjectContainerInput.Registry_override_instruct, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetRegistry_override_instruct() string {
	return v.Registry_override_instruct
}

// GetRelease_category returns CertProjectContainerInput.Release_category, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetRelease_category() string { return v.Release_category }

// GetRepository returns CertProjectContainerInput.Repository, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetRepository() string { return v.Repository }

// GetRepository_description returns CertProjectContainerInput.Repository_description, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetRepository_description() string {
	return v.Repository_description
}

// GetRepository_name returns CertProjectContainerInput.Repository_name, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetRepository_name() string { return v.Repository_name }

// GetShort_description returns CertProjectContainerInput.Short_description, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetShort_description() string { return v.Short_description }

// GetType returns CertProjectContainerInput.Type, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetType() string { return v.Type }

// GetGithub_usernames returns CertProjectContainerInput.Github_usernames, and is useful for accessing the field via an interface.
func (v *CertProjectContainerInput) GetGithub_usernames() []string { return v.Github_usernames }

// Helm chart related information.
type CertProjectHelmChartInput struct {
	// How your Helm Chart is distributed.
	Distribution_method string `json:"distribution_method,omitempty"`
	// The Helm Chart name as it will appear in GitHub.
	Chart_name string `json:"chart_name,omitempty"`
	// URL to the externally distributed Helm Chart repository. This is not used if the chart is distributed via Red Hat.
	Repository string `json:"repository,omitempty"`
	// Instructions for users to access an externally distributed Helm Chart.
	Distribution_instructions string `json:"distribution_instructions,omitempty"`
	// Base64 encoded PGP public key. Used to sign result submissions.
	Public_pgp_key string `json:"public_pgp_key,omitempty"`
	// URL to the user submitted github pull request for this project.
	Github_pull_request string `json:"github_pull_request,omitempty"`
	// Short description of the Helm Chart.
	Short_description string `json:"short_description,omitempty"`
	// Long description of the Helm Chart.
	Long_description string `json:"long_description,omitempty"`
	// The application categories (types).
	Application_categories []string `json:"application_categories,omitempty"`
	// OCP versions for this Helm Chart.
	Ocp_versions []string `json:"ocp_versions,omitempty"`
	// GitHub users authorized to submit a certification pull request.
	Github_usernames []string `json:"github_usernames,omitempty"`
}

// GetDistribution_method returns CertProjectHelmChartInput.Distribution_method, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetDistribution_method() string { return v.Distribution_method }

// GetChart_name returns CertProjectHelmChartInput.Chart_name, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetChart_name() string { return v.Chart_name }

// GetRepository returns CertProjectHelmChartInput.Repository, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetRepository() string { return v.Repository }

// GetDistribution_instructions returns CertProjectHelmChartInput.Distribution_instructions, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetDistribution_instructions() string {
	return v.Distribution_instructions
}

// GetPublic_pgp_key returns CertProjectHelmChartInput.Public_pgp_key, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetPublic_pgp_key() string { return v.Public_pgp_key }

// GetGithub_pull_request returns CertProjectHelmChartInput.Github_pull_request, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetGithub_pull_request() string { return v.Github_pull_request }

// GetShort_description returns CertProjectHelmChartInput.Short_description, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetShort_description() string { return v.Short_description }

// GetLong_description returns CertProjectHelmChartInput.Long_description, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetLong_description() string { return v.Long_description }

// GetApplication_categories returns CertProjectHelmChartInput.Application_categories, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetApplication_categories() []string {
	return v.Application_categories
}

// GetOcp_versions returns CertProjectHelmChartInput.Ocp_versions, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetOcp_versions() []string { return v.Ocp_versions }

// GetGithub_usernames returns CertProjectHelmChartInput.Github_usernames, and is useful for accessing the field via an interface.
func (v *CertProjectHelmChartInput) GetGithub_usernames() []string { return v.Github_usernames }

// Marketplace related information.
type CertProjectMarketplaceInput struct {
	Enablement_status string `json:"enablement_status,omitempty"`
	Enablement_url    string `json:"enablement_url,omitempty"`
	Listing_url       string `json:"listing_url,omitempty"`
	Published         bool   `json:"published,omitempty"`
}

// GetEnablement_status returns CertProjectMarketplaceInput.Enablement_status, and is useful for accessing the field via an interface.
func (v *CertProjectMarketplaceInput) GetEnablement_status() string { return v.Enablement_status }

// GetEnablement_url returns CertProjectMarketplaceInput.Enablement_url, and is useful for accessing the field via an interface.
func (v *CertProjectMarketplaceInput) GetEnablement_url() string { return v.Enablement_url }

// GetListing_url returns CertProjectMarketplaceInput.Listing_url, and is useful for accessing the field via an interface.
func (v *CertProjectMarketplaceInput) GetListing_url() string { return v.Listing_url }

// GetPublished returns CertProjectMarketplaceInput.Published, and is useful for accessing the field via an interface.
func (v *CertProjectMarketplaceInput) GetPublished() bool { return v.Published }

// Non-container project info.
type CertProjectNonContainerInput struct {
	Source_system_id string `json:"source_system_id,omitempty"`
}

// GetSource_system_id returns CertProjectNonContainerInput.Source_system_id, and is useful for accessing the field via an interface.
func (v *CertProjectNonContainerInput) GetSource_system_id() string { return v.Source_system_id }

// OpenStack related information.
type CertProjectOpenStackInput struct {
	// OpenStack service type for test suite selection
	Service string `json:"service,omitempty"`
}

// GetService returns CertProjectOpenStackInput.Service, and is useful for accessing the field via an interface.
func (v *CertProjectOpenStackInput) GetService() string { return v.Service }

// Red Hat projects related information.
type CertProjectRedhatInput struct {
	// Red Hat Product ID.
	Product_id int `json:"product_id,omitempty"`
	// Red Hat product name.
	Product_name string `json:"product_name,omitempty"`
	// Red Hat Product Version.
	Product_version string `json:"product_version,omitempty"`
	// Red Hat Product Version.
	Product_version_id int `json:"product_version_id,omitempty"`
}

// GetProduct_id returns CertProjectRedhatInput.Product_id, and is useful for accessing the field via an interface.
func (v *CertProjectRedhatInput) GetProduct_id() int { return v.Product_id }

// GetProduct_name returns CertProjectRedhatInput.Product_name, and is useful for accessing the field via an interface.
func (v *CertProjectRedhatInput) GetProduct_name() string { return v.Product_name }

// GetProduct_version returns CertProjectRedhatInput.Product_version, and is useful for accessing the field via an interface.
func (v *CertProjectRedhatInput) GetProduct_version() string { return v.Product_version }

// GetProduct_version_id returns CertProjectRedhatInput.Product_version_id, and is useful for accessing the field via an interface.
func (v *CertProjectRedhatInput) GetProduct_version_id() int { return v.Product_version_id }

// Red Hat projects related information.
type CertProjectSelfCertificationInput struct {
	// Application Profiler.
	App_profiler bool `json:"app_profiler,omitempty"`
	// Application Runs on App Type.
	App_runs_on_app_type bool `json:"app_runs_on_app_type,omitempty"`
	// Whether the Self Certification Evidence URL requires a customer login.
	Auth_login bool `json:"auth_login,omitempty"`
	// Self Certification Evidence URL.
	Certification_url string `json:"certification_url,omitempty"`
	// Can Commercially Support on App Type.
	Comm_support_on_app_type bool `json:"comm_support_on_app_type,omitempty"`
	// Self Certification Requested.
	Requested bool `json:"requested,omitempty"`
	// TsaNET Member.
	Tsanet_member bool `json:"tsanet_member,omitempty"`
}

// GetApp_profiler returns CertProjectSelfCertificationInput.App_profiler, and is useful for accessing the field via an interface.
func (v *CertProjectSelfCertificationInput) GetApp_profiler() bool { return v.App_profiler }

// GetApp_runs_on_app_type returns CertProjectSelfCertificationInput.App_runs_on_app_type, and is useful for accessing the field via an interface.
func (v *CertProjectSelfCertificationInput) GetApp_runs_on_app_type() bool {
	return v.App_runs_on_app_type
}

// GetAuth_login returns CertProjectSelfCertificationInput.Auth_login, and is useful for accessing the field via an interface.
func (v *CertProjectSelfCertificationInput) GetAuth_login() bool { return v.Auth_login }

// GetCertification_url returns CertProjectSelfCertificationInput.Certification_url, and is useful for accessing the field via an interface.
func (v *CertProjectSelfCertificationInput) GetCertification_url() string { return v.Certification_url }

// GetComm_support_on_app_type returns CertProjectSelfCertificationInput.Comm_support_on_app_type, and is useful for accessing the field via an interface.
func (v *CertProjectSelfCertificationInput) GetComm_support_on_app_type() bool {
	return v.Comm_support_on_app_type
}

// GetRequested returns CertProjectSelfCertificationInput.Requested, and is useful for accessing the field via an interface.
func (v *CertProjectSelfCertificationInput) GetRequested() bool { return v.Requested }

// GetTsanet_member returns CertProjectSelfCertificationInput.Tsanet_member, and is useful for accessing the field via an interface.
func (v *CertProjectSelfCertificationInput) GetTsanet_member() bool { return v.Tsanet_member }

// Contain Certification project data.
type CertificationProjectInput struct {
	// Value is derived from last_update_date field during when the certification project is published. Before it or if project is again unpublished, the value is null.
	Certification_date *time.Time `json:"certification_date,omitempty"`
	// Tracks history for the `certification_level` field
	Certification_level_history *FieldHistoryStringInput `json:"certification_level_history,omitempty"`
	// The certification project can be certified on several levels. This field determines whether the content was certified by ISV partner who followed official Red Hat certification, or by vendor validation.
	Certification_level string `json:"certification_level,omitempty"`
	// Tracks history for the `certification_status` field
	Certification_status_history *FieldHistoryStringInput `json:"certification_status_history,omitempty"`
	// Certification Status.
	Certification_status string `json:"certification_status,omitempty"`
	// Certification User.
	Certification_user int `json:"certification_user,omitempty"`
	// Contacts for certification project.
	Contacts  []*CertProjectContactsInput `json:"contacts,omitempty"`
	Container *CertProjectContainerInput  `json:"container,omitempty"`
	// Configuration specific to Helm Chart projects.
	Helm_chart  *CertProjectHelmChartInput   `json:"helm_chart,omitempty"`
	Marketplace *CertProjectMarketplaceInput `json:"marketplace,omitempty"`
	// The owner provided name of the certification project.
	Name          string                        `json:"name,omitempty"`
	Non_container *CertProjectNonContainerInput `json:"non_container,omitempty"`
	// Operator Distribution.
	Operator_distribution string `json:"operator_distribution,omitempty"`
	// Configuration specific to OpenStack projects.
	Openstack *CertProjectOpenStackInput `json:"openstack,omitempty"`
	// Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.
	Org_id int `json:"org_id,omitempty"`
	// Unique identifier for the product listing.
	Product_listings []string `json:"product_listings,omitempty"`
	// Status of the certification project.
	Project_status string `json:"project_status,omitempty"`
	// Who published the certification project.
	Published_by       string                             `json:"published_by,omitempty"`
	Redhat             *CertProjectRedhatInput            `json:"redhat,omitempty"`
	Self_certification *CertProjectSelfCertificationInput `json:"self_certification,omitempty"`
	// Special certifications specific to the certification platform
	Badges []string `json:"badges,omitempty"`
	// Certification project type.
	Type string `json:"type,omitempty"`
	// MongoDB unique _id
	Id string `json:"_id,omitempty"`
	// The date when the entry was created. Value is created automatically on creation.
	Creation_date *time.Time `json:"creation_date,omitempty"`
	// The date when the entry was last updated.
	Last_update_date *time.Time `json:"last_update_date,omitempty"`
	// SSO username from the JWT - who created the entry or null if no JWT.
	Created_on_behalf_of string `json:"created_on_behalf_of,omitempty"`
	// SSO username from the JWT - who updated the entry or null if no JWT.
	Updated_on_behalf_of string `json:"updated_on_behalf_of,omitempty"`
}

// GetCertification_date returns CertificationProjectInput.Certification_date, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetCertification_date() *time.Time { return v.Certification_date }

// GetCertification_level_history returns CertificationProjectInput.Certification_level_history, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetCertification_level_history() *FieldHistoryStringInput {
	return v.Certification_level_history
}

// GetCertification_level returns CertificationProjectInput.Certification_level, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetCertification_level() string { return v.Certification_level }

// GetCertification_status_history returns CertificationProjectInput.Certification_status_history, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetCertification_status_history() *FieldHistoryStringInput {
	return v.Certification_status_history
}

// GetCertification_status returns CertificationProjectInput.Certification_status, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetCertification_status() string { return v.Certification_status }

// GetCertification_user returns CertificationProjectInput.Certification_user, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetCertification_user() int { return v.Certification_user }

// GetContacts returns CertificationProjectInput.Contacts, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetContacts() []*CertProjectContactsInput { return v.Contacts }

// GetContainer returns CertificationProjectInput.Container, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetContainer() *CertProjectContainerInput { return v.Container }

// GetHelm_chart returns CertificationProjectInput.Helm_chart, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetHelm_chart() *CertProjectHelmChartInput { return v.Helm_chart }

// GetMarketplace returns CertificationProjectInput.Marketplace, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetMarketplace() *CertProjectMarketplaceInput {
	return v.Marketplace
}

// GetName returns CertificationProjectInput.Name, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetName() string { return v.Name }

// GetNon_container returns CertificationProjectInput.Non_container, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetNon_container() *CertProjectNonContainerInput {
	return v.Non_container
}

// GetOperator_distribution returns CertificationProjectInput.Operator_distribution, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetOperator_distribution() string { return v.Operator_distribution }

// GetOpenstack returns CertificationProjectInput.Openstack, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetOpenstack() *CertProjectOpenStackInput { return v.Openstack }

// GetOrg_id returns CertificationProjectInput.Org_id, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetOrg_id() int { return v.Org_id }

// GetProduct_listings returns CertificationProjectInput.Product_listings, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetProduct_listings() []string { return v.Product_listings }

// GetProject_status returns CertificationProjectInput.Project_status, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetProject_status() string { return v.Project_status }

// GetPublished_by returns CertificationProjectInput.Published_by, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetPublished_by() string { return v.Published_by }

// GetRedhat returns CertificationProjectInput.Redhat, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetRedhat() *CertProjectRedhatInput { return v.Redhat }

// GetSelf_certification returns CertificationProjectInput.Self_certification, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetSelf_certification() *CertProjectSelfCertificationInput {
	return v.Self_certification
}

// GetBadges returns CertificationProjectInput.Badges, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetBadges() []string { return v.Badges }

// GetType returns CertificationProjectInput.Type, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetType() string { return v.Type }

// GetId returns CertificationProjectInput.Id, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetId() string { return v.Id }

// GetCreation_date returns CertificationProjectInput.Creation_date, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetCreation_date() *time.Time { return v.Creation_date }

// GetLast_update_date returns CertificationProjectInput.Last_update_date, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetLast_update_date() *time.Time { return v.Last_update_date }

// GetCreated_on_behalf_of returns CertificationProjectInput.Created_on_behalf_of, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetCreated_on_behalf_of() string { return v.Created_on_behalf_of }

// GetUpdated_on_behalf_of returns CertificationProjectInput.Updated_on_behalf_of, and is useful for accessing the field via an interface.
func (v *CertificationProjectInput) GetUpdated_on_behalf_of() string { return v.Updated_on_behalf_of }

// ComponentSupportedFields includes the GraphQL fields of CertificationProject requested by the fragment ComponentSupportedFields.
// The GraphQL type's documentation follows.
//
// Contain Certification project data.
type ComponentSupportedFields struct {
	// MongoDB unique _id
	Id string `json:"_id"`
	// The owner provided name of the certification project.
	Name string `json:"name"`
	// Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.
	Org_id int `json:"org_id"`
	// Certification project type.
	Type string `json:"type"`
	// Status of the certification project.
	Project_status string `json:"project_status"`
	// Certification Status.
	Certification_status string `json:"certification_status"`
	// The date when the entry was created. Value is created automatically on creation.
	Creation_date *time.Time `json:"creation_date"`
	// The date when the entry was last updated.
	Last_update_date *time.Time `json:"last_update_date"`
	// Configuration specific to Helm Chart projects.
	Helm_chart *ComponentSupportedFieldsHelm_chartCertProjectHelmChart `json:"helm_chart"`
	Container  *ComponentSupportedFieldsContainerCertProjectContainer  `json:"container"`
	// Contacts for certification project.
	Contacts []*ComponentSupportedFieldsContactsCertProjectContacts `json:"contacts"`
}

// GetId returns ComponentSupportedFields.Id, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetId() string { return v.Id }

// GetName returns ComponentSupportedFields.Name, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetName() string { return v.Name }

// GetOrg_id returns ComponentSupportedFields.Org_id, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetOrg_id() int { return v.Org_id }

// GetType returns ComponentSupportedFields.Type, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetType() string { return v.Type }

// GetProject_status returns ComponentSupportedFields.Project_status, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetProject_status() string { return v.Project_status }

// GetCertification_status returns ComponentSupportedFields.Certification_status, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetCertification_status() string { return v.Certification_status }

// GetCreation_date returns ComponentSupportedFields.Creation_date, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetCreation_date() *time.Time { return v.Creation_date }

// GetLast_update_date returns ComponentSupportedFields.Last_update_date, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetLast_update_date() *time.Time { return v.Last_update_date }

// GetHelm_chart returns ComponentSupportedFields.Helm_chart, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetHelm_chart() *ComponentSupportedFieldsHelm_chartCertProjectHelmChart {
	return v.Helm_chart
}

// GetContainer returns ComponentSupportedFields.Container, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetContainer() *ComponentSupportedFieldsContainerCertProjectContainer {
	return v.Container
}

// GetContacts returns ComponentSupportedFields.Contacts, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFields) GetContacts() []*ComponentSupportedFieldsContactsCertProjectContacts {
	return v.Contacts
}

// ComponentSupportedFieldsContactsCertProjectContacts includes the requested fields of the GraphQL type CertProjectContacts.
// The GraphQL type's documentation follows.
//
// Contact info.
type ComponentSupportedFieldsContactsCertProjectContacts struct {
	Email_address string `json:"email_address"`
	Type          string `json:"type"`
}

// GetEmail_address returns ComponentSupportedFieldsContactsCertProjectContacts.Email_address, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsContactsCertProjectContacts) GetEmail_address() string {
	return v.Email_address
}

// GetType returns ComponentSupportedFieldsContactsCertProjectContacts.Type, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsContactsCertProjectContacts) GetType() string { return v.Type }

// ComponentSupportedFieldsContainerCertProjectContainer includes the requested fields of the GraphQL type CertProjectContainer.
// The GraphQL type's documentation follows.
//
// Container related information.
type ComponentSupportedFieldsContainerCertProjectContainer struct {
	// ID of the project in for ISV repositories.
	Isv_pid string `json:"isv_pid"`
	// Distribution method.
	Distribution_method string `json:"distribution_method"`
	// Container type.
	// Field is required, if project type is 'Container', and the field is immutable for Partners after creation.
	Type string `json:"type"`
	// Short description of the container.
	Short_description string `json:"short_description"`
	// This should represent your product (or the component if your product consists of multiple containers)
	// and a major version. For example, you could use names like jboss-server7, or agent5.
	//
	// This value is only editable when there are no published containers in this project.
	// It is only applicable for projects that do not have the 'external' distribution method.
	Repository_name string `json:"repository_name"`
	// The repository description is displayed on the container
	// catalog repository overview page.
	Repository_description string `json:"repository_description"`
}

// GetIsv_pid returns ComponentSupportedFieldsContainerCertProjectContainer.Isv_pid, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsContainerCertProjectContainer) GetIsv_pid() string { return v.Isv_pid }

// GetDistribution_method returns ComponentSupportedFieldsContainerCertProjectContainer.Distribution_method, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsContainerCertProjectContainer) GetDistribution_method() string {
	return v.Distribution_method
}

// GetType returns ComponentSupportedFieldsContainerCertProjectContainer.Type, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsContainerCertProjectContainer) GetType() string { return v.Type }

// GetShort_description returns ComponentSupportedFieldsContainerCertProjectContainer.Short_description, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsContainerCertProjectContainer) GetShort_description() string {
	return v.Short_description
}

// GetRepository_name returns ComponentSupportedFieldsContainerCertProjectContainer.Repository_name, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsContainerCertProjectContainer) GetRepository_name() string {
	return v.Repository_name
}

// GetRepository_description returns ComponentSupportedFieldsContainerCertProjectContainer.Repository_description, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsContainerCertProjectContainer) GetRepository_description() string {
	return v.Repository_description
}

// ComponentSupportedFieldsHelm_chartCertProjectHelmChart includes the requested fields of the GraphQL type CertProjectHelmChart.
// The GraphQL type's documentation follows.
//
// Helm chart related information.
type ComponentSupportedFieldsHelm_chartCertProjectHelmChart struct {
	// The Helm Chart name as it will appear in GitHub.
	Chart_name string `json:"chart_name"`
	// URL to the externally distributed Helm Chart repository. This is not used if the chart is distributed via Red Hat.
	Repository string `json:"repository"`
	// Short description of the Helm Chart.
	Short_description string `json:"short_description"`
	// Long description of the Helm Chart.
	Long_description string `json:"long_description"`
	// GitHub users authorized to submit a certification pull request.
	Github_usernames []string `json:"github_usernames"`
	// How your Helm Chart is distributed.
	Distribution_method string `json:"distribution_method"`
}

// GetChart_name returns ComponentSupportedFieldsHelm_chartCertProjectHelmChart.Chart_name, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsHelm_chartCertProjectHelmChart) GetChart_name() string {
	return v.Chart_name
}

// GetRepository returns ComponentSupportedFieldsHelm_chartCertProjectHelmChart.Repository, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsHelm_chartCertProjectHelmChart) GetRepository() string {
	return v.Repository
}

// GetShort_description returns ComponentSupportedFieldsHelm_chartCertProjectHelmChart.Short_description, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsHelm_chartCertProjectHelmChart) GetShort_description() string {
	return v.Short_description
}

// GetLong_description returns ComponentSupportedFieldsHelm_chartCertProjectHelmChart.Long_description, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsHelm_chartCertProjectHelmChart) GetLong_description() string {
	return v.Long_description
}

// GetGithub_usernames returns ComponentSupportedFieldsHelm_chartCertProjectHelmChart.Github_usernames, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsHelm_chartCertProjectHelmChart) GetGithub_usernames() []string {
	return v.Github_usernames
}

// GetDistribution_method returns ComponentSupportedFieldsHelm_chartCertProjectHelmChart.Distribution_method, and is useful for accessing the field via an interface.
func (v *ComponentSupportedFieldsHelm_chartCertProjectHelmChart) GetDistribution_method() string {
	return v.Distribution_method
}

// ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse includes the requested fields of the GraphQL type CertificationProjectPaginatedResponse.
type ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse struct {
	Data      []*ComponentSupportedFields                                                                                `json:"data"`
	Error     *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponseError `json:"error"`
	Page      int                                                                                                        `json:"page"`
	Page_size int                                                                                                        `json:"page_size"`
	Total     int                                                                                                        `json:"total"`
}

// GetData returns ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse.Data, and is useful for accessing the field via an interface.
func (v *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse) GetData() []*ComponentSupportedFields {
	return v.Data
}

// GetError returns ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse.Error, and is useful for accessing the field via an interface.
func (v *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse) GetError() *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponseError {
	return v.Error
}

// GetPage returns ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse.Page, and is useful for accessing the field via an interface.
func (v *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse) GetPage() int {
	return v.Page
}

// GetPage_size returns ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse.Page_size, and is useful for accessing the field via an interface.
func (v *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse) GetPage_size() int {
	return v.Page_size
}

// GetTotal returns ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse.Total, and is useful for accessing the field via an interface.
func (v *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse) GetTotal() int {
	return v.Total
}

// ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponseError includes the requested fields of the GraphQL type ResponseError.
type ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponseError struct {
	Status int    `json:"status"`
	Detail string `json:"detail"`
}

// GetStatus returns ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponseError.Status, and is useful for accessing the field via an interface.
func (v *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponseError) GetStatus() int {
	return v.Status
}

// GetDetail returns ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponseError.Detail, and is useful for accessing the field via an interface.
func (v *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponseError) GetDetail() string {
	return v.Detail
}

// ComponentsForListingResponse is returned by ComponentsForListing on success.
type ComponentsForListingResponse struct {
	// Get certification projects associated with product listing.
	Find_product_listing_certification_projects *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse `json:"find_product_listing_certification_projects"`
}

// GetFind_product_listing_certification_projects returns ComponentsForListingResponse.Find_product_listing_certification_projects, and is useful for accessing the field via an interface.
func (v *ComponentsForListingResponse) GetFind_product_listing_certification_projects() *ComponentsForListingFind_product_listing_certification_projectsCertificationProjectPaginatedResponse {
	return v.Find_product_listing_certification_projects
}

type ContactsItemsInput struct {
	Email_address string `json:"email_address,omitempty"`
	Type          string `json:"type,omitempty"`
}

// GetEmail_address returns ContactsItemsInput.Email_address, and is useful for accessing the field via an interface.
func (v *ContactsItemsInput) GetEmail_address() string { return v.Email_address }

// GetType returns ContactsItemsInput.Type, and is useful for accessing the field via an interface.
func (v *ContactsItemsInput) GetType() string { return v.Type }

// DeleteProductResponse is returned by DeleteProduct on success.
type DeleteProductResponse struct {
	// Update product listing.
	Update_product_listing *DeleteProductUpdate_product_listingProductListingResponse `json:"update_product_listing"`
}

// GetUpdate_product_listing returns DeleteProductResponse.Update_product_listing, and is useful for accessing the field via an interface.
func (v *DeleteProductResponse) GetUpdate_product_listing() *DeleteProductUpdate_product_listingProductListingResponse {
	return v.Update_product_listing
}

// DeleteProductUpdate_product_listingProductListingResponse includes the requested fields of the GraphQL type ProductListingResponse.
type DeleteProductUpdate_product_listingProductListingResponse struct {
	Data  *DeleteProductUpdate_product_listingProductListingResponseDataProductListing `json:"data"`
	Error *DeleteProductUpdate_product_listingProductListingResponseError              `json:"error"`
}

// GetData returns DeleteProductUpdate_product_listingProductListingResponse.Data, and is useful for accessing the field via an interface.
func (v *DeleteProductUpdate_product_listingProductListingResponse) GetData() *DeleteProductUpdate_product_listingProductListingResponseDataProductListing {
	return v.Data
}

// GetError returns DeleteProductUpdate_product_listingProductListingResponse.Error, and is useful for accessing the field via an interface.
func (v *DeleteProductUpdate_product_listingProductListingResponse) GetError() *DeleteProductUpdate_product_listingProductListingResponseError {
	return v.Error
}

// DeleteProductUpdate_product_listingProductListingResponseDataProductListing includes the requested fields of the GraphQL type ProductListing.
// The GraphQL type's documentation follows.
//
// Product listings define a marketing page in the Ecosystem Catalog. It allows you to group repos and showcase what they accomplish together as an application. In the case of operators, your CSV file populates OperatorHub, which can only be viewed in cluster through OpenShift. Your product listing is publicly visible in the Ecosystem Catalog so anyone can know that it is offered.
type DeleteProductUpdate_product_listingProductListingResponseDataProductListing struct {
	// MongoDB unique _id
	Id string `json:"_id"`
	// Flag determining if product listing is considered to be deleted. Product listing can be deleted only if it is not published. Value is set to False by default.
	Deleted bool `json:"deleted"`
	// The date when the entry was last updated.
	Last_update_date *time.Time `json:"last_update_date"`
}

// GetId returns DeleteProductUpdate_product_listingProductListingResponseDataProductListing.Id, and is useful for accessing the field via an interface.
func (v *DeleteProductUpdate_product_listingProductListingResponseDataProductListing) GetId() string {
	return v.Id
}

// GetDeleted returns DeleteProductUpdate_product_listingProductListingResponseDataProductListing.Deleted, and is useful for accessing the field via an interface.
func (v *DeleteProductUpdate_product_listingProductListingResponseDataProductListing) GetDeleted() bool {
	return v.Deleted
}

// GetLast_update_date returns DeleteProductUpdate_product_listingProductListingResponseDataProductListing.Last_update_date, and is useful for accessing the field via an interface.
func (v *DeleteProductUpdate_product_listingProductListingResponseDataProductListing) GetLast_update_date() *time.Time {
	return v.Last_update_date
}

// DeleteProductUpdate_product_listingProductListingResponseError includes the requested fields of the GraphQL type ResponseError.
type DeleteProductUpdate_product_listingProductListingResponseError struct {
	Status int    `json:"status"`
	Detail string `json:"detail"`
}

// GetStatus returns DeleteProductUpdate_product_listingProductListingResponseError.Status, and is useful for accessing the field via an interface.
func (v *DeleteProductUpdate_product_listingProductListingResponseError) GetStatus() int {
	return v.Status
}

// GetDetail returns DeleteProductUpdate_product_listingProductListingResponseError.Detail, and is useful for accessing the field via an interface.
func (v *DeleteProductUpdate_product_listingProductListingResponseError) GetDetail() string {
	return v.Detail
}

// This field is required when the product listing is published.
type DescriptionsInput struct {
	Long string `json:"long,omitempty"`
	// This field should not contain any links and link-like data. Following (and similar) patterns are forbidden: ``http://, https://, fttp://, fttps://, file://, ssh://, git://, www., mailto:``
	Short string `json:"short,omitempty"`
}

// GetLong returns DescriptionsInput.Long, and is useful for accessing the field via an interface.
func (v *DescriptionsInput) GetLong() string { return v.Long }

// GetShort returns DescriptionsInput.Short, and is useful for accessing the field via an interface.
func (v *DescriptionsInput) GetShort() string { return v.Short }

// This field is required when the product listing is published.
type FAQSItemsInput struct {
	Answer   string `json:"answer,omitempty"`
	Question string `json:"question,omitempty"`
}

// GetAnswer returns FAQSItemsInput.Answer, and is useful for accessing the field via an interface.
func (v *FAQSItemsInput) GetAnswer() string { return v.Answer }

// GetQuestion returns FAQSItemsInput.Question, and is useful for accessing the field via an interface.
func (v *FAQSItemsInput) GetQuestion() string { return v.Question }

// This field is required when the product listing is published.
type FeaturesItemsInput struct {
	Description string `json:"description,omitempty"`
	Title       string `json:"title,omitempty"`
}

// GetDescription returns FeaturesItemsInput.Description, and is useful for accessing the field via an interface.
func (v *FeaturesItemsInput) GetDescription() string { return v.Description }

// GetTitle returns FeaturesItemsInput.Title, and is useful for accessing the field via an interface.
func (v *FeaturesItemsInput) GetTitle() string { return v.Title }

// Tracks changes to a field.
type FieldHistoryBooleanInput struct {
	History []*FieldHistoryDetailBooleanInput `json:"history,omitempty"`
}

// GetHistory returns FieldHistoryBooleanInput.History, and is useful for accessing the field via an interface.
func (v *FieldHistoryBooleanInput) GetHistory() []*FieldHistoryDetailBooleanInput { return v.History }

// Represents a single change to a field.
type FieldHistoryDetailBooleanInput struct {
	// Date of change.
	Date *time.Time `json:"date,omitempty"`
	// User who made the change.
	Updated_by string `json:"updated_by,omitempty"`
	// Value that the field was changed to.
	Value bool `json:"value,omitempty"`
}

// GetDate returns FieldHistoryDetailBooleanInput.Date, and is useful for accessing the field via an interface.
func (v *FieldHistoryDetailBooleanInput) GetDate() *time.Time { return v.Date }

// GetUpdated_by returns FieldHistoryDetailBooleanInput.Updated_by, and is useful for accessing the field via an interface.
func (v *FieldHistoryDetailBooleanInput) GetUpdated_by() string { return v.Updated_by }

// GetValue returns FieldHistoryDetailBooleanInput.Value, and is useful for accessing the field via an interface.
func (v *FieldHistoryDetailBooleanInput) GetValue() bool { return v.Value }

// Represents a single change to a field.
type FieldHistoryDetailStringInput struct {
	// Date of change.
	Date *time.Time `json:"date,omitempty"`
	// User who made the change.
	Updated_by string `json:"updated_by,omitempty"`
	// Value that the field was changed to.
	Value string `json:"value,omitempty"`
}

// GetDate returns FieldHistoryDetailStringInput.Date, and is useful for accessing the field via an interface.
func (v *FieldHistoryDetailStringInput) GetDate() *time.Time { return v.Date }

// GetUpdated_by returns FieldHistoryDetailStringInput.Updated_by, and is useful for accessing the field via an interface.
func (v *FieldHistoryDetailStringInput) GetUpdated_by() string { return v.Updated_by }

// GetValue returns FieldHistoryDetailStringInput.Value, and is useful for accessing the field via an interface.
func (v *FieldHistoryDetailStringInput) GetValue() string { return v.Value }

// Tracks changes to a field.
type FieldHistoryStringInput struct {
	History []*FieldHistoryDetailStringInput `json:"history,omitempty"`
}

// GetHistory returns FieldHistoryStringInput.History, and is useful for accessing the field via an interface.
func (v *FieldHistoryStringInput) GetHistory() []*FieldHistoryDetailStringInput { return v.History }

type LegalInput struct {
	Description           string `json:"description,omitempty"`
	License_agreement_url string `json:"license_agreement_url,omitempty"`
	Privacy_policy_url    string `json:"privacy_policy_url,omitempty"`
}

// GetDescription returns LegalInput.Description, and is useful for accessing the field via an interface.
func (v *LegalInput) GetDescription() string { return v.Description }

// GetLicense_agreement_url returns LegalInput.License_agreement_url, and is useful for accessing the field via an interface.
func (v *LegalInput) GetLicense_agreement_url() string { return v.License_agreement_url }

// GetPrivacy_policy_url returns LegalInput.Privacy_policy_url, and is useful for accessing the field via an interface.
func (v *LegalInput) GetPrivacy_policy_url() string { return v.Privacy_policy_url }

type LinkedResourcesItemsInput struct {
	Category      string `json:"category,omitempty"`
	Description   string `json:"description,omitempty"`
	Thumbnail_url string `json:"thumbnail_url,omitempty"`
	Title         string `json:"title,omitempty"`
	Type          string `json:"type,omitempty"`
	Url           string `json:"url,omitempty"`
}

// GetCategory returns LinkedResourcesItemsInput.Category, and is useful for accessing the field via an interface.
func (v *LinkedResourcesItemsInput) GetCategory() string { return v.Category }

// GetDescription returns LinkedResourcesItemsInput.Description, and is useful for accessing the field via an interface.
func (v *LinkedResourcesItemsInput) GetDescription() string { return v.Description }

// GetThumbnail_url returns LinkedResourcesItemsInput.Thumbnail_url, and is useful for accessing the field via an interface.
func (v *LinkedResourcesItemsInput) GetThumbnail_url() string { return v.Thumbnail_url }

// GetTitle returns LinkedResourcesItemsInput.Title, and is useful for accessing the field via an interface.
func (v *LinkedResourcesItemsInput) GetTitle() string { return v.Title }

// GetType returns LinkedResourcesItemsInput.Type, and is useful for accessing the field via an interface.
func (v *LinkedResourcesItemsInput) GetType() string { return v.Type }

// GetUrl returns LinkedResourcesItemsInput.Url, and is useful for accessing the field via an interface.
func (v *LinkedResourcesItemsInput) GetUrl() string { return v.Url }

type LogoInput struct {
	Url string `json:"url,omitempty"`
}

// GetUrl returns LogoInput.Url, and is useful for accessing the field via an interface.
func (v *LogoInput) GetUrl() string { return v.Url }

// MutateComponentCommonResponse includes the GraphQL fields of CertificationProjectResponse requested by the fragment MutateComponentCommonResponse.
type MutateComponentCommonResponse struct {
	Data  *MutateComponentCommonResponseDataCertificationProject `json:"data"`
	Error *MutateComponentCommonResponseError                    `json:"error"`
}

// GetData returns MutateComponentCommonResponse.Data, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponse) GetData() *MutateComponentCommonResponseDataCertificationProject {
	return v.Data
}

// GetError returns MutateComponentCommonResponse.Error, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponse) GetError() *MutateComponentCommonResponseError {
	return v.Error
}

// MutateComponentCommonResponseDataCertificationProject includes the requested fields of the GraphQL type CertificationProject.
// The GraphQL type's documentation follows.
//
// Contain Certification project data.
type MutateComponentCommonResponseDataCertificationProject struct {
	ComponentSupportedFields `json:"-"`
}

// GetId returns MutateComponentCommonResponseDataCertificationProject.Id, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetId() string {
	return v.ComponentSupportedFields.Id
}

// GetName returns MutateComponentCommonResponseDataCertificationProject.Name, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetName() string {
	return v.ComponentSupportedFields.Name
}

// GetOrg_id returns MutateComponentCommonResponseDataCertificationProject.Org_id, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetOrg_id() int {
	return v.ComponentSupportedFields.Org_id
}

// GetType returns MutateComponentCommonResponseDataCertificationProject.Type, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetType() string {
	return v.ComponentSupportedFields.Type
}

// GetProject_status returns MutateComponentCommonResponseDataCertificationProject.Project_status, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetProject_status() string {
	return v.ComponentSupportedFields.Project_status
}

// GetCertification_status returns MutateComponentCommonResponseDataCertificationProject.Certification_status, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetCertification_status() string {
	return v.ComponentSupportedFields.Certification_status
}

// GetCreation_date returns MutateComponentCommonResponseDataCertificationProject.Creation_date, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetCreation_date() *time.Time {
	return v.ComponentSupportedFields.Creation_date
}

// GetLast_update_date returns MutateComponentCommonResponseDataCertificationProject.Last_update_date, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetLast_update_date() *time.Time {
	return v.ComponentSupportedFields.Last_update_date
}

// GetHelm_chart returns MutateComponentCommonResponseDataCertificationProject.Helm_chart, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetHelm_chart() *ComponentSupportedFieldsHelm_chartCertProjectHelmChart {
	return v.ComponentSupportedFields.Helm_chart
}

// GetContainer returns MutateComponentCommonResponseDataCertificationProject.Container, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetContainer() *ComponentSupportedFieldsContainerCertProjectContainer {
	return v.ComponentSupportedFields.Container
}

// GetContacts returns MutateComponentCommonResponseDataCertificationProject.Contacts, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseDataCertificationProject) GetContacts() []*ComponentSupportedFieldsContactsCertProjectContacts {
	return v.ComponentSupportedFields.Contacts
}

func (v *MutateComponentCommonResponseDataCertificationProject) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*MutateComponentCommonResponseDataCertificationProject
		graphql.NoUnmarshalJSON
	}
	firstPass.MutateComponentCommonResponseDataCertificationProject = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ComponentSupportedFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalMutateComponentCommonResponseDataCertificationProject struct {
	Id string `json:"_id"`

	Name string `json:"name"`

	Org_id int `json:"org_id"`

	Type string `json:"type"`

	Project_status string `json:"project_status"`

	Certification_status string `json:"certification_status"`

	Creation_date *time.Time `json:"creation_date"`

	Last_update_date *time.Time `json:"last_update_date"`

	Helm_chart *ComponentSupportedFieldsHelm_chartCertProjectHelmChart `json:"helm_chart"`

	Container *ComponentSupportedFieldsContainerCertProjectContainer `json:"container"`

	Contacts []*ComponentSupportedFieldsContactsCertProjectContacts `json:"contacts"`
}

func (v *MutateComponentCommonResponseDataCertificationProject) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *MutateComponentCommonResponseDataCertificationProject) __premarshalJSON() (*__premarshalMutateComponentCommonResponseDataCertificationProject, error) {
	var retval __premarshalMutateComponentCommonResponseDataCertificationProject

	retval.Id = v.ComponentSupportedFields.Id
	retval.Name = v.ComponentSupportedFields.Name
	retval.Org_id = v.ComponentSupportedFields.Org_id
	retval.Type = v.ComponentSupportedFields.Type
	retval.Project_status = v.ComponentSupportedFields.Project_status
	retval.Certification_status = v.ComponentSupportedFields.Certification_status
	retval.Creation_date = v.ComponentSupportedFields.Creation_date
	retval.Last_update_date = v.ComponentSupportedFields.Last_update_date
	retval.Helm_chart = v.ComponentSupportedFields.Helm_chart
	retval.Container = v.ComponentSupportedFields.Container
	retval.Contacts = v.ComponentSupportedFields.Contacts
	return &retval, nil
}

// MutateComponentCommonResponseError includes the requested fields of the GraphQL type ResponseError.
type MutateComponentCommonResponseError struct {
	Detail string `json:"detail"`
	Status int    `json:"status"`
}

// GetDetail returns MutateComponentCommonResponseError.Detail, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseError) GetDetail() string { return v.Detail }

// GetStatus returns MutateComponentCommonResponseError.Status, and is useful for accessing the field via an interface.
func (v *MutateComponentCommonResponseError) GetStatus() int { return v.Status }

// MutateProductListingCommonResponse includes the GraphQL fields of ProductListingResponse requested by the fragment MutateProductListingCommonResponse.
type MutateProductListingCommonResponse struct {
	Data  *MutateProductListingCommonResponseDataProductListing `json:"data"`
	Error *MutateProductListingCommonResponseError              `json:"error"`
}

// GetData returns MutateProductListingCommonResponse.Data, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponse) GetData() *MutateProductListingCommonResponseDataProductListing {
	return v.Data
}

// GetError returns MutateProductListingCommonResponse.Error, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponse) GetError() *MutateProductListingCommonResponseError {
	return v.Error
}

// MutateProductListingCommonResponseDataProductListing includes the requested fields of the GraphQL type ProductListing.
// The GraphQL type's documentation follows.
//
// Product listings define a marketing page in the Ecosystem Catalog. It allows you to group repos and showcase what they accomplish together as an application. In the case of operators, your CSV file populates OperatorHub, which can only be viewed in cluster through OpenShift. Your product listing is publicly visible in the Ecosystem Catalog so anyone can know that it is offered.
type MutateProductListingCommonResponseDataProductListing struct {
	ProductListingSupportedFields `json:"-"`
}

// GetId returns MutateProductListingCommonResponseDataProductListing.Id, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetId() string {
	return v.ProductListingSupportedFields.Id
}

// GetName returns MutateProductListingCommonResponseDataProductListing.Name, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetName() string {
	return v.ProductListingSupportedFields.Name
}

// GetOrg_id returns MutateProductListingCommonResponseDataProductListing.Org_id, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetOrg_id() int {
	return v.ProductListingSupportedFields.Org_id
}

// GetLast_update_date returns MutateProductListingCommonResponseDataProductListing.Last_update_date, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetLast_update_date() *time.Time {
	return v.ProductListingSupportedFields.Last_update_date
}

// GetDeleted returns MutateProductListingCommonResponseDataProductListing.Deleted, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetDeleted() bool {
	return v.ProductListingSupportedFields.Deleted
}

// GetPublished returns MutateProductListingCommonResponseDataProductListing.Published, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetPublished() bool {
	return v.ProductListingSupportedFields.Published
}

// GetType returns MutateProductListingCommonResponseDataProductListing.Type, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetType() string {
	return v.ProductListingSupportedFields.Type
}

// GetDescriptions returns MutateProductListingCommonResponseDataProductListing.Descriptions, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetDescriptions() *ProductListingSupportedFieldsDescriptions {
	return v.ProductListingSupportedFields.Descriptions
}

// GetContacts returns MutateProductListingCommonResponseDataProductListing.Contacts, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetContacts() []*ProductListingSupportedFieldsContactsContactsItems {
	return v.ProductListingSupportedFields.Contacts
}

// GetCreation_date returns MutateProductListingCommonResponseDataProductListing.Creation_date, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetCreation_date() *time.Time {
	return v.ProductListingSupportedFields.Creation_date
}

// GetCert_projects returns MutateProductListingCommonResponseDataProductListing.Cert_projects, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetCert_projects() []string {
	return v.ProductListingSupportedFields.Cert_projects
}

// GetSupport returns MutateProductListingCommonResponseDataProductListing.Support, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetSupport() *ProductListingSupportedFieldsSupport {
	return v.ProductListingSupportedFields.Support
}

// GetLegal returns MutateProductListingCommonResponseDataProductListing.Legal, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseDataProductListing) GetLegal() *ProductListingSupportedFieldsLegal {
	return v.ProductListingSupportedFields.Legal
}

func (v *MutateProductListingCommonResponseDataProductListing) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*MutateProductListingCommonResponseDataProductListing
		graphql.NoUnmarshalJSON
	}
	firstPass.MutateProductListingCommonResponseDataProductListing = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ProductListingSupportedFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalMutateProductListingCommonResponseDataProductListing struct {
	Id string `json:"_id"`

	Name string `json:"name"`

	Org_id int `json:"org_id"`

	Last_update_date *time.Time `json:"last_update_date"`

	Deleted bool `json:"deleted"`

	Published bool `json:"published"`

	Type string `json:"type"`

	Descriptions *ProductListingSupportedFieldsDescriptions `json:"descriptions"`

	Contacts []*ProductListingSupportedFieldsContactsContactsItems `json:"contacts"`

	Creation_date *time.Time `json:"creation_date"`

	Cert_projects []string `json:"cert_projects"`

	Support *ProductListingSupportedFieldsSupport `json:"support"`

	Legal *ProductListingSupportedFieldsLegal `json:"legal"`
}

func (v *MutateProductListingCommonResponseDataProductListing) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *MutateProductListingCommonResponseDataProductListing) __premarshalJSON() (*__premarshalMutateProductListingCommonResponseDataProductListing, error) {
	var retval __premarshalMutateProductListingCommonResponseDataProductListing

	retval.Id = v.ProductListingSupportedFields.Id
	retval.Name = v.ProductListingSupportedFields.Name
	retval.Org_id = v.ProductListingSupportedFields.Org_id
	retval.Last_update_date = v.ProductListingSupportedFields.Last_update_date
	retval.Deleted = v.ProductListingSupportedFields.Deleted
	retval.Published = v.ProductListingSupportedFields.Published
	retval.Type = v.ProductListingSupportedFields.Type
	retval.Descriptions = v.ProductListingSupportedFields.Descriptions
	retval.Contacts = v.ProductListingSupportedFields.Contacts
	retval.Creation_date = v.ProductListingSupportedFields.Creation_date
	retval.Cert_projects = v.ProductListingSupportedFields.Cert_projects
	retval.Support = v.ProductListingSupportedFields.Support
	retval.Legal = v.ProductListingSupportedFields.Legal
	return &retval, nil
}

// MutateProductListingCommonResponseError includes the requested fields of the GraphQL type ResponseError.
type MutateProductListingCommonResponseError struct {
	Status int    `json:"status"`
	Detail string `json:"detail"`
}

// GetStatus returns MutateProductListingCommonResponseError.Status, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseError) GetStatus() int { return v.Status }

// GetDetail returns MutateProductListingCommonResponseError.Detail, and is useful for accessing the field via an interface.
func (v *MutateProductListingCommonResponseError) GetDetail() string { return v.Detail }

// MyProductsFind_product_listingsProductListingPaginatedResponse includes the requested fields of the GraphQL type ProductListingPaginatedResponse.
type MyProductsFind_product_listingsProductListingPaginatedResponse struct {
	Data      []*ProductListingSupportedFields                                     `json:"data"`
	Error     *MyProductsFind_product_listingsProductListingPaginatedResponseError `json:"error"`
	Page      int                                                                  `json:"page"`
	Page_size int                                                                  `json:"page_size"`
	Total     int                                                                  `json:"total"`
}

// GetData returns MyProductsFind_product_listingsProductListingPaginatedResponse.Data, and is useful for accessing the field via an interface.
func (v *MyProductsFind_product_listingsProductListingPaginatedResponse) GetData() []*ProductListingSupportedFields {
	return v.Data
}

// GetError returns MyProductsFind_product_listingsProductListingPaginatedResponse.Error, and is useful for accessing the field via an interface.
func (v *MyProductsFind_product_listingsProductListingPaginatedResponse) GetError() *MyProductsFind_product_listingsProductListingPaginatedResponseError {
	return v.Error
}

// GetPage returns MyProductsFind_product_listingsProductListingPaginatedResponse.Page, and is useful for accessing the field via an interface.
func (v *MyProductsFind_product_listingsProductListingPaginatedResponse) GetPage() int { return v.Page }

// GetPage_size returns MyProductsFind_product_listingsProductListingPaginatedResponse.Page_size, and is useful for accessing the field via an interface.
func (v *MyProductsFind_product_listingsProductListingPaginatedResponse) GetPage_size() int {
	return v.Page_size
}

// GetTotal returns MyProductsFind_product_listingsProductListingPaginatedResponse.Total, and is useful for accessing the field via an interface.
func (v *MyProductsFind_product_listingsProductListingPaginatedResponse) GetTotal() int {
	return v.Total
}

// MyProductsFind_product_listingsProductListingPaginatedResponseError includes the requested fields of the GraphQL type ResponseError.
type MyProductsFind_product_listingsProductListingPaginatedResponseError struct {
	Detail string `json:"detail"`
	Status int    `json:"status"`
}

// GetDetail returns MyProductsFind_product_listingsProductListingPaginatedResponseError.Detail, and is useful for accessing the field via an interface.
func (v *MyProductsFind_product_listingsProductListingPaginatedResponseError) GetDetail() string {
	return v.Detail
}

// GetStatus returns MyProductsFind_product_listingsProductListingPaginatedResponseError.Status, and is useful for accessing the field via an interface.
func (v *MyProductsFind_product_listingsProductListingPaginatedResponseError) GetStatus() int {
	return v.Status
}

// MyProductsResponse is returned by MyProducts on success.
type MyProductsResponse struct {
	// Get all product listings.
	Find_product_listings *MyProductsFind_product_listingsProductListingPaginatedResponse `json:"find_product_listings"`
}

// GetFind_product_listings returns MyProductsResponse.Find_product_listings, and is useful for accessing the field via an interface.
func (v *MyProductsResponse) GetFind_product_listings() *MyProductsFind_product_listingsProductListingPaginatedResponse {
	return v.Find_product_listings
}

// MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse includes the requested fields of the GraphQL type CertificationProjectPaginatedResponse.
type MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse struct {
	Data      []*ComponentSupportedFields                                                                       `json:"data"`
	Error     *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponseError `json:"error"`
	Page      int                                                                                               `json:"page"`
	Page_size int                                                                                               `json:"page_size"`
	Total     int                                                                                               `json:"total"`
}

// GetData returns MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse.Data, and is useful for accessing the field via an interface.
func (v *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse) GetData() []*ComponentSupportedFields {
	return v.Data
}

// GetError returns MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse.Error, and is useful for accessing the field via an interface.
func (v *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse) GetError() *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponseError {
	return v.Error
}

// GetPage returns MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse.Page, and is useful for accessing the field via an interface.
func (v *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse) GetPage() int {
	return v.Page
}

// GetPage_size returns MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse.Page_size, and is useful for accessing the field via an interface.
func (v *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse) GetPage_size() int {
	return v.Page_size
}

// GetTotal returns MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse.Total, and is useful for accessing the field via an interface.
func (v *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse) GetTotal() int {
	return v.Total
}

// MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponseError includes the requested fields of the GraphQL type ResponseError.
type MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponseError struct {
	Detail string `json:"detail"`
	Status int    `json:"status"`
}

// GetDetail returns MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponseError.Detail, and is useful for accessing the field via an interface.
func (v *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponseError) GetDetail() string {
	return v.Detail
}

// GetStatus returns MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponseError.Status, and is useful for accessing the field via an interface.
func (v *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponseError) GetStatus() int {
	return v.Status
}

// MyProjectsResponse is returned by MyProjects on success.
type MyProjectsResponse struct {
	// Get certification projects for a vendor by Company Org ID.
	Find_vendor_certification_projects_by_org_id *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse `json:"find_vendor_certification_projects_by_org_id"`
}

// GetFind_vendor_certification_projects_by_org_id returns MyProjectsResponse.Find_vendor_certification_projects_by_org_id, and is useful for accessing the field via an interface.
func (v *MyProjectsResponse) GetFind_vendor_certification_projects_by_org_id() *MyProjectsFind_vendor_certification_projects_by_org_idCertificationProjectPaginatedResponse {
	return v.Find_vendor_certification_projects_by_org_id
}

// NewComponentResponse is returned by NewComponent on success.
type NewComponentResponse struct {
	// Create a certification project.
	Create_certification_project *MutateComponentCommonResponse `json:"create_certification_project"`
}

// GetCreate_certification_project returns NewComponentResponse.Create_certification_project, and is useful for accessing the field via an interface.
func (v *NewComponentResponse) GetCreate_certification_project() *MutateComponentCommonResponse {
	return v.Create_certification_project
}

// NewProductListingResponse is returned by NewProductListing on success.
type NewProductListingResponse struct {
	// Create product listing.
	Create_product_listing *MutateProductListingCommonResponse `json:"create_product_listing"`
}

// GetCreate_product_listing returns NewProductListingResponse.Create_product_listing, and is useful for accessing the field via an interface.
func (v *NewProductListingResponse) GetCreate_product_listing() *MutateProductListingCommonResponse {
	return v.Create_product_listing
}

// A subset of the \"metadata.annotations\" object from the CSV. Any annotations that are in the \"operators.openshift.io\" namespace that are strings of JSON will be expanded if it is valid JSON. Namespaces are not preserved due to their usage of special characters and all dashes are converted to underscores for consistency with other fields.
type OperatorBundleAnnotationInput struct {
	// The deserialized value of operators.openshift.io/infrastructure-features. This defaults to an empty array.
	Infrastructure_features []string `json:"infrastructure_features,omitempty"`
	// List of annotations for operator metadata to define various infrastructure features of an operator. Only lowercase. Nullable to indicate field not used.
	Features []string `json:"features,omitempty"`
	// The deserialized value of operators.openshift.io/valid-subscription. This defaults to an empty array.
	Valid_subscription []string `json:"valid_subscription,omitempty"`
}

// GetInfrastructure_features returns OperatorBundleAnnotationInput.Infrastructure_features, and is useful for accessing the field via an interface.
func (v *OperatorBundleAnnotationInput) GetInfrastructure_features() []string {
	return v.Infrastructure_features
}

// GetFeatures returns OperatorBundleAnnotationInput.Features, and is useful for accessing the field via an interface.
func (v *OperatorBundleAnnotationInput) GetFeatures() []string { return v.Features }

// GetValid_subscription returns OperatorBundleAnnotationInput.Valid_subscription, and is useful for accessing the field via an interface.
func (v *OperatorBundleAnnotationInput) GetValid_subscription() []string { return v.Valid_subscription }

type OperatorBundlesItemsInput struct {
	// Bundle unique identifier
	Id string `json:"_id,omitempty"`
	// Bundle package name
	Package      string   `json:"package,omitempty"`
	Capabilities []string `json:"capabilities,omitempty"`
	// Specific OCP version for this bundle, e.g. \"4.5\".
	Ocp_version string `json:"ocp_version,omitempty"`
	// A subset of the \"metadata.annotations\" object from the CSV. Any annotations that are in the \"operators.openshift.io\" namespace that are strings of JSON will be expanded if it is valid JSON. Namespaces are not preserved due to their usage of special characters and all dashes are converted to underscores for consistency with other fields.
	Annotations *OperatorBundleAnnotationInput `json:"annotations,omitempty"`
}

// GetId returns OperatorBundlesItemsInput.Id, and is useful for accessing the field via an interface.
func (v *OperatorBundlesItemsInput) GetId() string { return v.Id }

// GetPackage returns OperatorBundlesItemsInput.Package, and is useful for accessing the field via an interface.
func (v *OperatorBundlesItemsInput) GetPackage() string { return v.Package }

// GetCapabilities returns OperatorBundlesItemsInput.Capabilities, and is useful for accessing the field via an interface.
func (v *OperatorBundlesItemsInput) GetCapabilities() []string { return v.Capabilities }

// GetOcp_version returns OperatorBundlesItemsInput.Ocp_version, and is useful for accessing the field via an interface.
func (v *OperatorBundlesItemsInput) GetOcp_version() string { return v.Ocp_version }

// GetAnnotations returns OperatorBundlesItemsInput.Annotations, and is useful for accessing the field via an interface.
func (v *OperatorBundlesItemsInput) GetAnnotations() *OperatorBundleAnnotationInput {
	return v.Annotations
}

// ProductByIDGet_product_listingProductListingResponse includes the requested fields of the GraphQL type ProductListingResponse.
type ProductByIDGet_product_listingProductListingResponse struct {
	Data  *ProductListingSupportedFields                             `json:"data"`
	Error *ProductByIDGet_product_listingProductListingResponseError `json:"error"`
}

// GetData returns ProductByIDGet_product_listingProductListingResponse.Data, and is useful for accessing the field via an interface.
func (v *ProductByIDGet_product_listingProductListingResponse) GetData() *ProductListingSupportedFields {
	return v.Data
}

// GetError returns ProductByIDGet_product_listingProductListingResponse.Error, and is useful for accessing the field via an interface.
func (v *ProductByIDGet_product_listingProductListingResponse) GetError() *ProductByIDGet_product_listingProductListingResponseError {
	return v.Error
}

// ProductByIDGet_product_listingProductListingResponseError includes the requested fields of the GraphQL type ResponseError.
type ProductByIDGet_product_listingProductListingResponseError struct {
	Status int    `json:"status"`
	Detail string `json:"detail"`
}

// GetStatus returns ProductByIDGet_product_listingProductListingResponseError.Status, and is useful for accessing the field via an interface.
func (v *ProductByIDGet_product_listingProductListingResponseError) GetStatus() int { return v.Status }

// GetDetail returns ProductByIDGet_product_listingProductListingResponseError.Detail, and is useful for accessing the field via an interface.
func (v *ProductByIDGet_product_listingProductListingResponseError) GetDetail() string {
	return v.Detail
}

// ProductByIDResponse is returned by ProductByID on success.
type ProductByIDResponse struct {
	// Get a product listing.
	Get_product_listing *ProductByIDGet_product_listingProductListingResponse `json:"get_product_listing"`
}

// GetGet_product_listing returns ProductByIDResponse.Get_product_listing, and is useful for accessing the field via an interface.
func (v *ProductByIDResponse) GetGet_product_listing() *ProductByIDGet_product_listingProductListingResponse {
	return v.Get_product_listing
}

type ProductListingHelmChartDetailInput struct {
	// Helm chart name.
	Chart_name string `json:"chart_name,omitempty"`
}

// GetChart_name returns ProductListingHelmChartDetailInput.Chart_name, and is useful for accessing the field via an interface.
func (v *ProductListingHelmChartDetailInput) GetChart_name() string { return v.Chart_name }

type ProductListingHelmChartInput struct {
	// OCP versions for this helm chart.
	Ocp_versions []string `json:"ocp_versions,omitempty"`
	// Helm chart specific information.
	Charts []*ProductListingHelmChartDetailInput `json:"charts,omitempty"`
}

// GetOcp_versions returns ProductListingHelmChartInput.Ocp_versions, and is useful for accessing the field via an interface.
func (v *ProductListingHelmChartInput) GetOcp_versions() []string { return v.Ocp_versions }

// GetCharts returns ProductListingHelmChartInput.Charts, and is useful for accessing the field via an interface.
func (v *ProductListingHelmChartInput) GetCharts() []*ProductListingHelmChartDetailInput {
	return v.Charts
}

// Product listings define a marketing page in the Ecosystem Catalog. It allows you to group repos and showcase what they accomplish together as an application. In the case of operators, your CSV file populates OperatorHub, which can only be viewed in cluster through OpenShift. Your product listing is publicly visible in the Ecosystem Catalog so anyone can know that it is offered.
type ProductListingInput struct {
	Category string `json:"category,omitempty"`
	// List of unique identifiers for the certification project.
	Cert_projects []string `json:"cert_projects,omitempty"`
	// List of contacts for the product listing. This field is required when the product listing is published.
	Contacts []*ContactsItemsInput `json:"contacts,omitempty"`
	// This field is required when the product listing is published.
	Descriptions *DescriptionsInput `json:"descriptions,omitempty"`
	// Company node ID from Red Hat Connect. Read only.
	Drupal_company_id int `json:"drupal_company_id,omitempty"`
	// FAQ section for the catalog page.
	Faqs []*FAQSItemsInput `json:"faqs,omitempty"`
	// Features section for the catalog page.
	Features []*FeaturesItemsInput `json:"features,omitempty"`
	// Indicates if the listing is eligible to be featured in Catalog.
	Focus_product bool `json:"focus_product,omitempty"`
	// This field is required when the product listing is published.
	Functional_categories []string `json:"functional_categories,omitempty"`
	// Information related to helm chart product listing.
	Helm_chart *ProductListingHelmChartInput `json:"helm_chart,omitempty"`
	Legal      *LegalInput                   `json:"legal,omitempty"`
	// This field is required when the product listing is published.
	Linked_resources []*LinkedResourcesItemsInput `json:"linked_resources,omitempty"`
	Logo             *LogoInput                   `json:"logo,omitempty"`
	// This field is required when the product listing is published.
	Name string `json:"name,omitempty"`
	// Tracks history for the `published` field
	Published_history *FieldHistoryBooleanInput `json:"published_history,omitempty"`
	// This field is required when the product listing is published.
	Published bool `json:"published,omitempty"`
	// Flag determining if product listing is considered to be deleted. Product listing can be deleted only if it is not published. Value is set to False by default.
	Deleted                   bool                          `json:"deleted,omitempty"`
	Quick_start_configuration *QuickStartConfigurationInput `json:"quick_start_configuration,omitempty"`
	// List of unique identifiers for the repository.
	Repositories []string `json:"repositories,omitempty"`
	// List of search aliases for Solr.
	Search_aliases []*SearchAliasesItemsInput `json:"search_aliases,omitempty"`
	// This field is required when the product listing is published.
	Support *SupportInput `json:"support,omitempty"`
	// List of target platforms for the product listing.
	Target_platforms []string `json:"target_platforms,omitempty"`
	// This field is required when the product listing is published.
	Type             string                       `json:"type,omitempty"`
	Vendor_label     string                       `json:"vendor_label,omitempty"`
	Operator_bundles []*OperatorBundlesItemsInput `json:"operator_bundles,omitempty"`
	// Special certifications specific to the certification platform. The value is given by attached certification projects which are published.
	Certification_badges []string `json:"certification_badges,omitempty"`
	// Special certifications specific to the certification platform. The value is given by all attached certification projects with any certification_level.
	Certification_badges_all []string `json:"certification_badges_all,omitempty"`
	// List of badges disabled for given product. This field is taken into account when synchronizing badges from certification projects.
	Certification_badges_exclude []string `json:"certification_badges_exclude,omitempty"`
	// Tracks history for the `certification_level` field
	Certification_level_history *FieldHistoryStringInput `json:"certification_level_history,omitempty"`
	// The product listing content can be certified on several levels. This field determines whether the content was certified by Red Hat itself, by an ISV partner who followed official Red Hat certification, or by vendor validation.
	Certification_level string `json:"certification_level,omitempty"`
	// List of industries to which the product listing belongs.
	Industries []string `json:"industries,omitempty"`
	// Determine a way how a product is deployed, based only on published projects.
	Deployed_as []string `json:"deployed_as,omitempty"`
	// Determine a way how a product is deployed, based on all projects with any certification_status.
	Deployed_as_all []string `json:"deployed_as_all,omitempty"`
	// Reflects the date when the last certification event happened for published product (eg. attached certification project is published, new image is published, helm chart released)
	Last_published_certification_date *time.Time `json:"last_published_certification_date,omitempty"`
	// Data about all related approved Red Hat validations.
	Product_validations_data *ProductValidationsDataInput `json:"product_validations_data,omitempty"`
	// Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.
	Org_id int `json:"org_id,omitempty"`
	// MongoDB unique _id
	Id string `json:"_id,omitempty"`
	// The date when the entry was created. Value is created automatically on creation.
	Creation_date *time.Time `json:"creation_date,omitempty"`
	// The date when the entry was last updated.
	Last_update_date *time.Time `json:"last_update_date,omitempty"`
}

// GetCategory returns ProductListingInput.Category, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetCategory() string { return v.Category }

// GetCert_projects returns ProductListingInput.Cert_projects, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetCert_projects() []string { return v.Cert_projects }

// GetContacts returns ProductListingInput.Contacts, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetContacts() []*ContactsItemsInput { return v.Contacts }

// GetDescriptions returns ProductListingInput.Descriptions, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetDescriptions() *DescriptionsInput { return v.Descriptions }

// GetDrupal_company_id returns ProductListingInput.Drupal_company_id, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetDrupal_company_id() int { return v.Drupal_company_id }

// GetFaqs returns ProductListingInput.Faqs, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetFaqs() []*FAQSItemsInput { return v.Faqs }

// GetFeatures returns ProductListingInput.Features, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetFeatures() []*FeaturesItemsInput { return v.Features }

// GetFocus_product returns ProductListingInput.Focus_product, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetFocus_product() bool { return v.Focus_product }

// GetFunctional_categories returns ProductListingInput.Functional_categories, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetFunctional_categories() []string { return v.Functional_categories }

// GetHelm_chart returns ProductListingInput.Helm_chart, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetHelm_chart() *ProductListingHelmChartInput { return v.Helm_chart }

// GetLegal returns ProductListingInput.Legal, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetLegal() *LegalInput { return v.Legal }

// GetLinked_resources returns ProductListingInput.Linked_resources, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetLinked_resources() []*LinkedResourcesItemsInput {
	return v.Linked_resources
}

// GetLogo returns ProductListingInput.Logo, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetLogo() *LogoInput { return v.Logo }

// GetName returns ProductListingInput.Name, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetName() string { return v.Name }

// GetPublished_history returns ProductListingInput.Published_history, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetPublished_history() *FieldHistoryBooleanInput {
	return v.Published_history
}

// GetPublished returns ProductListingInput.Published, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetPublished() bool { return v.Published }

// GetDeleted returns ProductListingInput.Deleted, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetDeleted() bool { return v.Deleted }

// GetQuick_start_configuration returns ProductListingInput.Quick_start_configuration, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetQuick_start_configuration() *QuickStartConfigurationInput {
	return v.Quick_start_configuration
}

// GetRepositories returns ProductListingInput.Repositories, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetRepositories() []string { return v.Repositories }

// GetSearch_aliases returns ProductListingInput.Search_aliases, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetSearch_aliases() []*SearchAliasesItemsInput { return v.Search_aliases }

// GetSupport returns ProductListingInput.Support, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetSupport() *SupportInput { return v.Support }

// GetTarget_platforms returns ProductListingInput.Target_platforms, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetTarget_platforms() []string { return v.Target_platforms }

// GetType returns ProductListingInput.Type, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetType() string { return v.Type }

// GetVendor_label returns ProductListingInput.Vendor_label, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetVendor_label() string { return v.Vendor_label }

// GetOperator_bundles returns ProductListingInput.Operator_bundles, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetOperator_bundles() []*OperatorBundlesItemsInput {
	return v.Operator_bundles
}

// GetCertification_badges returns ProductListingInput.Certification_badges, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetCertification_badges() []string { return v.Certification_badges }

// GetCertification_badges_all returns ProductListingInput.Certification_badges_all, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetCertification_badges_all() []string {
	return v.Certification_badges_all
}

// GetCertification_badges_exclude returns ProductListingInput.Certification_badges_exclude, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetCertification_badges_exclude() []string {
	return v.Certification_badges_exclude
}

// GetCertification_level_history returns ProductListingInput.Certification_level_history, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetCertification_level_history() *FieldHistoryStringInput {
	return v.Certification_level_history
}

// GetCertification_level returns ProductListingInput.Certification_level, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetCertification_level() string { return v.Certification_level }

// GetIndustries returns ProductListingInput.Industries, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetIndustries() []string { return v.Industries }

// GetDeployed_as returns ProductListingInput.Deployed_as, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetDeployed_as() []string { return v.Deployed_as }

// GetDeployed_as_all returns ProductListingInput.Deployed_as_all, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetDeployed_as_all() []string { return v.Deployed_as_all }

// GetLast_published_certification_date returns ProductListingInput.Last_published_certification_date, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetLast_published_certification_date() *time.Time {
	return v.Last_published_certification_date
}

// GetProduct_validations_data returns ProductListingInput.Product_validations_data, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetProduct_validations_data() *ProductValidationsDataInput {
	return v.Product_validations_data
}

// GetOrg_id returns ProductListingInput.Org_id, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetOrg_id() int { return v.Org_id }

// GetId returns ProductListingInput.Id, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetId() string { return v.Id }

// GetCreation_date returns ProductListingInput.Creation_date, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetCreation_date() *time.Time { return v.Creation_date }

// GetLast_update_date returns ProductListingInput.Last_update_date, and is useful for accessing the field via an interface.
func (v *ProductListingInput) GetLast_update_date() *time.Time { return v.Last_update_date }

// ProductListingSupportedFields includes the GraphQL fields of ProductListing requested by the fragment ProductListingSupportedFields.
// The GraphQL type's documentation follows.
//
// Product listings define a marketing page in the Ecosystem Catalog. It allows you to group repos and showcase what they accomplish together as an application. In the case of operators, your CSV file populates OperatorHub, which can only be viewed in cluster through OpenShift. Your product listing is publicly visible in the Ecosystem Catalog so anyone can know that it is offered.
type ProductListingSupportedFields struct {
	// MongoDB unique _id
	Id string `json:"_id"`
	// This field is required when the product listing is published.
	Name string `json:"name"`
	// Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.
	Org_id int `json:"org_id"`
	// The date when the entry was last updated.
	Last_update_date *time.Time `json:"last_update_date"`
	// Flag determining if product listing is considered to be deleted. Product listing can be deleted only if it is not published. Value is set to False by default.
	Deleted bool `json:"deleted"`
	// This field is required when the product listing is published.
	Published bool `json:"published"`
	// This field is required when the product listing is published.
	Type string `json:"type"`
	// This field is required when the product listing is published.
	Descriptions *ProductListingSupportedFieldsDescriptions `json:"descriptions"`
	// List of contacts for the product listing. This field is required when the product listing is published.
	Contacts []*ProductListingSupportedFieldsContactsContactsItems `json:"contacts"`
	// The date when the entry was created. Value is created automatically on creation.
	Creation_date *time.Time `json:"creation_date"`
	// List of unique identifiers for the certification project.
	Cert_projects []string `json:"cert_projects"`
	// This field is required when the product listing is published.
	Support *ProductListingSupportedFieldsSupport `json:"support"`
	Legal   *ProductListingSupportedFieldsLegal   `json:"legal"`
}

// GetId returns ProductListingSupportedFields.Id, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetId() string { return v.Id }

// GetName returns ProductListingSupportedFields.Name, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetName() string { return v.Name }

// GetOrg_id returns ProductListingSupportedFields.Org_id, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetOrg_id() int { return v.Org_id }

// GetLast_update_date returns ProductListingSupportedFields.Last_update_date, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetLast_update_date() *time.Time { return v.Last_update_date }

// GetDeleted returns ProductListingSupportedFields.Deleted, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetDeleted() bool { return v.Deleted }

// GetPublished returns ProductListingSupportedFields.Published, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetPublished() bool { return v.Published }

// GetType returns ProductListingSupportedFields.Type, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetType() string { return v.Type }

// GetDescriptions returns ProductListingSupportedFields.Descriptions, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetDescriptions() *ProductListingSupportedFieldsDescriptions {
	return v.Descriptions
}

// GetContacts returns ProductListingSupportedFields.Contacts, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetContacts() []*ProductListingSupportedFieldsContactsContactsItems {
	return v.Contacts
}

// GetCreation_date returns ProductListingSupportedFields.Creation_date, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetCreation_date() *time.Time { return v.Creation_date }

// GetCert_projects returns ProductListingSupportedFields.Cert_projects, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetCert_projects() []string { return v.Cert_projects }

// GetSupport returns ProductListingSupportedFields.Support, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetSupport() *ProductListingSupportedFieldsSupport {
	return v.Support
}

// GetLegal returns ProductListingSupportedFields.Legal, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFields) GetLegal() *ProductListingSupportedFieldsLegal {
	return v.Legal
}

// ProductListingSupportedFieldsContactsContactsItems includes the requested fields of the GraphQL type ContactsItems.
type ProductListingSupportedFieldsContactsContactsItems struct {
	Email_address string `json:"email_address"`
	Type          string `json:"type"`
}

// GetEmail_address returns ProductListingSupportedFieldsContactsContactsItems.Email_address, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsContactsContactsItems) GetEmail_address() string {
	return v.Email_address
}

// GetType returns ProductListingSupportedFieldsContactsContactsItems.Type, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsContactsContactsItems) GetType() string { return v.Type }

// ProductListingSupportedFieldsDescriptions includes the requested fields of the GraphQL type Descriptions.
// The GraphQL type's documentation follows.
//
// This field is required when the product listing is published.
type ProductListingSupportedFieldsDescriptions struct {
	Long string `json:"long"`
	// This field should not contain any links and link-like data. Following (and similar) patterns are forbidden: ``http://, https://, fttp://, fttps://, file://, ssh://, git://, www., mailto:``
	Short string `json:"short"`
}

// GetLong returns ProductListingSupportedFieldsDescriptions.Long, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsDescriptions) GetLong() string { return v.Long }

// GetShort returns ProductListingSupportedFieldsDescriptions.Short, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsDescriptions) GetShort() string { return v.Short }

// ProductListingSupportedFieldsLegal includes the requested fields of the GraphQL type Legal.
type ProductListingSupportedFieldsLegal struct {
	Description           string `json:"description"`
	License_agreement_url string `json:"license_agreement_url"`
	Privacy_policy_url    string `json:"privacy_policy_url"`
}

// GetDescription returns ProductListingSupportedFieldsLegal.Description, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsLegal) GetDescription() string { return v.Description }

// GetLicense_agreement_url returns ProductListingSupportedFieldsLegal.License_agreement_url, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsLegal) GetLicense_agreement_url() string {
	return v.License_agreement_url
}

// GetPrivacy_policy_url returns ProductListingSupportedFieldsLegal.Privacy_policy_url, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsLegal) GetPrivacy_policy_url() string {
	return v.Privacy_policy_url
}

// ProductListingSupportedFieldsSupport includes the requested fields of the GraphQL type Support.
// The GraphQL type's documentation follows.
//
// This field is required when the product listing is published.
type ProductListingSupportedFieldsSupport struct {
	Description   string `json:"description"`
	Email_address string `json:"email_address"`
	Phone_number  string `json:"phone_number"`
	Url           string `json:"url"`
}

// GetDescription returns ProductListingSupportedFieldsSupport.Description, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsSupport) GetDescription() string { return v.Description }

// GetEmail_address returns ProductListingSupportedFieldsSupport.Email_address, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsSupport) GetEmail_address() string { return v.Email_address }

// GetPhone_number returns ProductListingSupportedFieldsSupport.Phone_number, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsSupport) GetPhone_number() string { return v.Phone_number }

// GetUrl returns ProductListingSupportedFieldsSupport.Url, and is useful for accessing the field via an interface.
func (v *ProductListingSupportedFieldsSupport) GetUrl() string { return v.Url }

// Data about all related approved Red Hat validations.
type ProductValidationsDataInput struct {
	// List of all related approved Red Hat validations.
	Validations []*ValidationItemsInput `json:"validations,omitempty"`
}

// GetValidations returns ProductValidationsDataInput.Validations, and is useful for accessing the field via an interface.
func (v *ProductValidationsDataInput) GetValidations() []*ValidationItemsInput { return v.Validations }

type QuickStartConfigurationInput struct {
	Instructions string `json:"instructions,omitempty"`
	// A flag indicating whether a product uses a default instruction for deployment.
	Default_deploy_instructions bool `json:"default_deploy_instructions,omitempty"`
}

// GetInstructions returns QuickStartConfigurationInput.Instructions, and is useful for accessing the field via an interface.
func (v *QuickStartConfigurationInput) GetInstructions() string { return v.Instructions }

// GetDefault_deploy_instructions returns QuickStartConfigurationInput.Default_deploy_instructions, and is useful for accessing the field via an interface.
func (v *QuickStartConfigurationInput) GetDefault_deploy_instructions() bool {
	return v.Default_deploy_instructions
}

// Details about Red Hat product.
type RedHatProductItemsInput struct {
	// Red Hat product name.
	Name string `json:"name,omitempty"`
	// Flag to signalize partner claim to support any future version of the Red Hat product.
	Support_future_versions bool `json:"support_future_versions,omitempty"`
	// List of versions of the Red Hat product supported by partner product.
	Versions []string `json:"versions,omitempty"`
}

// GetName returns RedHatProductItemsInput.Name, and is useful for accessing the field via an interface.
func (v *RedHatProductItemsInput) GetName() string { return v.Name }

// GetSupport_future_versions returns RedHatProductItemsInput.Support_future_versions, and is useful for accessing the field via an interface.
func (v *RedHatProductItemsInput) GetSupport_future_versions() bool { return v.Support_future_versions }

// GetVersions returns RedHatProductItemsInput.Versions, and is useful for accessing the field via an interface.
func (v *RedHatProductItemsInput) GetVersions() []string { return v.Versions }

// Registry credentials.
type RegistryCredentialsInput struct {
	// Container registry username.
	Username string `json:"username,omitempty"`
	// Container registry password.
	Password string `json:"password,omitempty"`
}

// GetUsername returns RegistryCredentialsInput.Username, and is useful for accessing the field via an interface.
func (v *RegistryCredentialsInput) GetUsername() string { return v.Username }

// GetPassword returns RegistryCredentialsInput.Password, and is useful for accessing the field via an interface.
func (v *RegistryCredentialsInput) GetPassword() string { return v.Password }

type SearchAliasesItemsInput struct {
	Key   string `json:"key,omitempty"`
	Value string `json:"value,omitempty"`
}

// GetKey returns SearchAliasesItemsInput.Key, and is useful for accessing the field via an interface.
func (v *SearchAliasesItemsInput) GetKey() string { return v.Key }

// GetValue returns SearchAliasesItemsInput.Value, and is useful for accessing the field via an interface.
func (v *SearchAliasesItemsInput) GetValue() string { return v.Value }

// SetComponentsForProductResponse is returned by SetComponentsForProduct on success.
type SetComponentsForProductResponse struct {
	// Update product listing.
	Update_product_listing *SetComponentsForProductUpdate_product_listingProductListingResponse `json:"update_product_listing"`
}

// GetUpdate_product_listing returns SetComponentsForProductResponse.Update_product_listing, and is useful for accessing the field via an interface.
func (v *SetComponentsForProductResponse) GetUpdate_product_listing() *SetComponentsForProductUpdate_product_listingProductListingResponse {
	return v.Update_product_listing
}

// SetComponentsForProductUpdate_product_listingProductListingResponse includes the requested fields of the GraphQL type ProductListingResponse.
type SetComponentsForProductUpdate_product_listingProductListingResponse struct {
	Data  *SetComponentsForProductUpdate_product_listingProductListingResponseDataProductListing `json:"data"`
	Error *SetComponentsForProductUpdate_product_listingProductListingResponseError              `json:"error"`
}

// GetData returns SetComponentsForProductUpdate_product_listingProductListingResponse.Data, and is useful for accessing the field via an interface.
func (v *SetComponentsForProductUpdate_product_listingProductListingResponse) GetData() *SetComponentsForProductUpdate_product_listingProductListingResponseDataProductListing {
	return v.Data
}

// GetError returns SetComponentsForProductUpdate_product_listingProductListingResponse.Error, and is useful for accessing the field via an interface.
func (v *SetComponentsForProductUpdate_product_listingProductListingResponse) GetError() *SetComponentsForProductUpdate_product_listingProductListingResponseError {
	return v.Error
}

// SetComponentsForProductUpdate_product_listingProductListingResponseDataProductListing includes the requested fields of the GraphQL type ProductListing.
// The GraphQL type's documentation follows.
//
// Product listings define a marketing page in the Ecosystem Catalog. It allows you to group repos and showcase what they accomplish together as an application. In the case of operators, your CSV file populates OperatorHub, which can only be viewed in cluster through OpenShift. Your product listing is publicly visible in the Ecosystem Catalog so anyone can know that it is offered.
type SetComponentsForProductUpdate_product_listingProductListingResponseDataProductListing struct {
	// MongoDB unique _id
	Id string `json:"_id"`
	// List of unique identifiers for the certification project.
	Cert_projects []string `json:"cert_projects"`
	// The date when the entry was last updated.
	Last_update_date *time.Time `json:"last_update_date"`
}

// GetId returns SetComponentsForProductUpdate_product_listingProductListingResponseDataProductListing.Id, and is useful for accessing the field via an interface.
func (v *SetComponentsForProductUpdate_product_listingProductListingResponseDataProductListing) GetId() string {
	return v.Id
}

// GetCert_projects returns SetComponentsForProductUpdate_product_listingProductListingResponseDataProductListing.Cert_projects, and is useful for accessing the field via an interface.
func (v *SetComponentsForProductUpdate_product_listingProductListingResponseDataProductListing) GetCert_projects() []string {
	return v.Cert_projects
}

// GetLast_update_date returns SetComponentsForProductUpdate_product_listingProductListingResponseDataProductListing.Last_update_date, and is useful for accessing the field via an interface.
func (v *SetComponentsForProductUpdate_product_listingProductListingResponseDataProductListing) GetLast_update_date() *time.Time {
	return v.Last_update_date
}

// SetComponentsForProductUpdate_product_listingProductListingResponseError includes the requested fields of the GraphQL type ResponseError.
type SetComponentsForProductUpdate_product_listingProductListingResponseError struct {
	Status int    `json:"status"`
	Detail string `json:"detail"`
}

// GetStatus returns SetComponentsForProductUpdate_product_listingProductListingResponseError.Status, and is useful for accessing the field via an interface.
func (v *SetComponentsForProductUpdate_product_listingProductListingResponseError) GetStatus() int {
	return v.Status
}

// GetDetail returns SetComponentsForProductUpdate_product_listingProductListingResponseError.Detail, and is useful for accessing the field via an interface.
func (v *SetComponentsForProductUpdate_product_listingProductListingResponseError) GetDetail() string {
	return v.Detail
}

// This field is required when the product listing is published.
type SupportInput struct {
	Description   string `json:"description,omitempty"`
	Email_address string `json:"email_address,omitempty"`
	Phone_number  string `json:"phone_number,omitempty"`
	Url           string `json:"url,omitempty"`
}

// GetDescription returns SupportInput.Description, and is useful for accessing the field via an interface.
func (v *SupportInput) GetDescription() string { return v.Description }

// GetEmail_address returns SupportInput.Email_address, and is useful for accessing the field via an interface.
func (v *SupportInput) GetEmail_address() string { return v.Email_address }

// GetPhone_number returns SupportInput.Phone_number, and is useful for accessing the field via an interface.
func (v *SupportInput) GetPhone_number() string { return v.Phone_number }

// GetUrl returns SupportInput.Url, and is useful for accessing the field via an interface.
func (v *SupportInput) GetUrl() string { return v.Url }

// Details about approved Red Hat validation.
type ValidationItemsInput struct {
	// ID of productValidation.
	Id string `json:"_id,omitempty"`
	// List of Red Hat products.
	Redhat_products []*RedHatProductItemsInput `json:"redhat_products,omitempty"`
}

// GetId returns ValidationItemsInput.Id, and is useful for accessing the field via an interface.
func (v *ValidationItemsInput) GetId() string { return v.Id }

// GetRedhat_products returns ValidationItemsInput.Redhat_products, and is useful for accessing the field via an interface.
func (v *ValidationItemsInput) GetRedhat_products() []*RedHatProductItemsInput {
	return v.Redhat_products
}

// __ApplyComponentInput is used internally by genqlient
type __ApplyComponentInput struct {
	ComponentID string                     `json:"componentID"`
	Updated     *CertificationProjectInput `json:"updated,omitempty"`
}

// GetComponentID returns __ApplyComponentInput.ComponentID, and is useful for accessing the field via an interface.
func (v *__ApplyComponentInput) GetComponentID() string { return v.ComponentID }

// GetUpdated returns __ApplyComponentInput.Updated, and is useful for accessing the field via an interface.
func (v *__ApplyComponentInput) GetUpdated() *CertificationProjectInput { return v.Updated }

// __ApplyProductListingInput is used internally by genqlient
type __ApplyProductListingInput struct {
	Id     string               `json:"id,omitempty"`
	Update *ProductListingInput `json:"update,omitempty"`
}

// GetId returns __ApplyProductListingInput.Id, and is useful for accessing the field via an interface.
func (v *__ApplyProductListingInput) GetId() string { return v.Id }

// GetUpdate returns __ApplyProductListingInput.Update, and is useful for accessing the field via an interface.
func (v *__ApplyProductListingInput) GetUpdate() *ProductListingInput { return v.Update }

// __ArchiveComponentInput is used internally by genqlient
type __ArchiveComponentInput struct {
	Id string `json:"id"`
}

// GetId returns __ArchiveComponentInput.Id, and is useful for accessing the field via an interface.
func (v *__ArchiveComponentInput) GetId() string { return v.Id }

// __ComponentsForListingInput is used internally by genqlient
type __ComponentsForListingInput struct {
	ProductID string `json:"productID"`
	Page      int    `json:"page"`
	PageSize  int    `json:"pageSize"`
}

// GetProductID returns __ComponentsForListingInput.ProductID, and is useful for accessing the field via an interface.
func (v *__ComponentsForListingInput) GetProductID() string { return v.ProductID }

// GetPage returns __ComponentsForListingInput.Page, and is useful for accessing the field via an interface.
func (v *__ComponentsForListingInput) GetPage() int { return v.Page }

// GetPageSize returns __ComponentsForListingInput.PageSize, and is useful for accessing the field via an interface.
func (v *__ComponentsForListingInput) GetPageSize() int { return v.PageSize }

// __DeleteProductInput is used internally by genqlient
type __DeleteProductInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteProductInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteProductInput) GetId() string { return v.Id }

// __MyProductsInput is used internally by genqlient
type __MyProductsInput struct {
	OrgID    int `json:"orgID"`
	Page     int `json:"page"`
	PageSize int `json:"pageSize"`
}

// GetOrgID returns __MyProductsInput.OrgID, and is useful for accessing the field via an interface.
func (v *__MyProductsInput) GetOrgID() int { return v.OrgID }

// GetPage returns __MyProductsInput.Page, and is useful for accessing the field via an interface.
func (v *__MyProductsInput) GetPage() int { return v.Page }

// GetPageSize returns __MyProductsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__MyProductsInput) GetPageSize() int { return v.PageSize }

// __MyProjectsInput is used internally by genqlient
type __MyProjectsInput struct {
	OrgID    int `json:"orgID"`
	Page     int `json:"page"`
	PageSize int `json:"pageSize"`
}

// GetOrgID returns __MyProjectsInput.OrgID, and is useful for accessing the field via an interface.
func (v *__MyProjectsInput) GetOrgID() int { return v.OrgID }

// GetPage returns __MyProjectsInput.Page, and is useful for accessing the field via an interface.
func (v *__MyProjectsInput) GetPage() int { return v.Page }

// GetPageSize returns __MyProjectsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__MyProjectsInput) GetPageSize() int { return v.PageSize }

// __NewComponentInput is used internally by genqlient
type __NewComponentInput struct {
	New *CertificationProjectInput `json:"new,omitempty"`
}

// GetNew returns __NewComponentInput.New, and is useful for accessing the field via an interface.
func (v *__NewComponentInput) GetNew() *CertificationProjectInput { return v.New }

// __NewProductListingInput is used internally by genqlient
type __NewProductListingInput struct {
	New *ProductListingInput `json:"new,omitempty"`
}

// GetNew returns __NewProductListingInput.New, and is useful for accessing the field via an interface.
func (v *__NewProductListingInput) GetNew() *ProductListingInput { return v.New }

// __ProductByIDInput is used internally by genqlient
type __ProductByIDInput struct {
	ProductID string `json:"productID"`
}

// GetProductID returns __ProductByIDInput.ProductID, and is useful for accessing the field via an interface.
func (v *__ProductByIDInput) GetProductID() string { return v.ProductID }

// __SetComponentsForProductInput is used internally by genqlient
type __SetComponentsForProductInput struct {
	ProductID    string   `json:"productID"`
	ComponentIDs []string `json:"componentIDs"`
}

// GetProductID returns __SetComponentsForProductInput.ProductID, and is useful for accessing the field via an interface.
func (v *__SetComponentsForProductInput) GetProductID() string { return v.ProductID }

// GetComponentIDs returns __SetComponentsForProductInput.ComponentIDs, and is useful for accessing the field via an interface.
func (v *__SetComponentsForProductInput) GetComponentIDs() []string { return v.ComponentIDs }

// The query or mutation executed by ApplyComponent.
const ApplyComponent_Operation = `
mutation ApplyComponent ($componentID: ObjectIDFilterScalar, $updated: CertificationProjectInput) {
	update_certification_project(id: $componentID, input: $updated) {
		... MutateComponentCommonResponse
	}
}
fragment MutateComponentCommonResponse on CertificationProjectResponse {
	data {
		... ComponentSupportedFields
	}
	error {
		detail
		status
	}
}
fragment ComponentSupportedFields on CertificationProject {
	_id
	name
	org_id
	type
	project_status
	certification_status
	creation_date
	last_update_date
	helm_chart {
		chart_name
		repository
		short_description
		long_description
		github_usernames
		distribution_method
	}
	container {
		isv_pid
		distribution_method
		type
		short_description
		repository_name
		repository_description
	}
	contacts {
		email_address
		type
	}
}
`

func ApplyComponent(
	ctx_ context.Context,
	client_ graphql.Client,
	componentID string,
	updated *CertificationProjectInput,
) (*ApplyComponentResponse, error) {
	req_ := &graphql.Request{
		OpName: "ApplyComponent",
		Query:  ApplyComponent_Operation,
		Variables: &__ApplyComponentInput{
			ComponentID: componentID,
			Updated:     updated,
		},
	}
	var err_ error

	var data_ ApplyComponentResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ApplyProductListing.
const ApplyProductListing_Operation = `
mutation ApplyProductListing ($id: ObjectIDFilterScalar, $update: ProductListingInput!) {
	update_product_listing(id: $id, input: $update) {
		... MutateProductListingCommonResponse
	}
}
fragment MutateProductListingCommonResponse on ProductListingResponse {
	data {
		... ProductListingSupportedFields
	}
	error {
		status
		detail
	}
}
fragment ProductListingSupportedFields on ProductListing {
	_id
	name
	org_id
	last_update_date
	deleted
	published
	type
	descriptions {
		long
		short
	}
	contacts {
		email_address
		type
	}
	creation_date
	cert_projects
	support {
		description
		email_address
		phone_number
		url
	}
	legal {
		description
		license_agreement_url
		privacy_policy_url
	}
}
`

func ApplyProductListing(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
	update *ProductListingInput,
) (*ApplyProductListingResponse, error) {
	req_ := &graphql.Request{
		OpName: "ApplyProductListing",
		Query:  ApplyProductListing_Operation,
		Variables: &__ApplyProductListingInput{
			Id:     id,
			Update: update,
		},
	}
	var err_ error

	var data_ ApplyProductListingResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ArchiveComponent.
const ArchiveComponent_Operation = `
mutation ArchiveComponent ($id: ObjectIDFilterScalar) {
	update_certification_project(id: $id, input: {project_status:"archived"}) {
		data {
			_id
			last_update_date
			project_status
		}
		error {
			status
			detail
		}
	}
}
`

func ArchiveComponent(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*ArchiveComponentResponse, error) {
	req_ := &graphql.Request{
		OpName: "ArchiveComponent",
		Query:  ArchiveComponent_Operation,
		Variables: &__ArchiveComponentInput{
			Id: id,
		},
	}
	var err_ error

	var data_ ArchiveComponentResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ComponentsForListing.
const ComponentsForListing_Operation = `
query ComponentsForListing ($productID: ObjectIDFilterScalar, $page: Int!, $pageSize: Int!) {
	find_product_listing_certification_projects(id: $productID, page: $page, page_size: $pageSize) {
		data {
			... ComponentSupportedFields
		}
		error {
			status
			detail
		}
		page
		page_size
		total
	}
}
fragment ComponentSupportedFields on CertificationProject {
	_id
	name
	org_id
	type
	project_status
	certification_status
	creation_date
	last_update_date
	helm_chart {
		chart_name
		repository
		short_description
		long_description
		github_usernames
		distribution_method
	}
	container {
		isv_pid
		distribution_method
		type
		short_description
		repository_name
		repository_description
	}
	contacts {
		email_address
		type
	}
}
`

func ComponentsForListing(
	ctx_ context.Context,
	client_ graphql.Client,
	productID string,
	page int,
	pageSize int,
) (*ComponentsForListingResponse, error) {
	req_ := &graphql.Request{
		OpName: "ComponentsForListing",
		Query:  ComponentsForListing_Operation,
		Variables: &__ComponentsForListingInput{
			ProductID: productID,
			Page:      page,
			PageSize:  pageSize,
		},
	}
	var err_ error

	var data_ ComponentsForListingResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by DeleteProduct.
const DeleteProduct_Operation = `
mutation DeleteProduct ($id: ObjectIDFilterScalar) {
	update_product_listing(id: $id, input: {deleted:true}) {
		data {
			_id
			deleted
			last_update_date
		}
		error {
			status
			detail
		}
	}
}
`

func DeleteProduct(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*DeleteProductResponse, error) {
	req_ := &graphql.Request{
		OpName: "DeleteProduct",
		Query:  DeleteProduct_Operation,
		Variables: &__DeleteProductInput{
			Id: id,
		},
	}
	var err_ error

	var data_ DeleteProductResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by MyProducts.
const MyProducts_Operation = `
query MyProducts ($orgID: Int, $page: Int!, $pageSize: Int!) {
	find_product_listings(filter: {and:[{org_id:{eq:$orgID}},{deleted:{eq:false}}]}, page_size: $pageSize, page: $page, sort_by: {field:"last_update_date",order:DESC}) {
		data {
			... ProductListingSupportedFields
		}
		error {
			detail
			status
		}
		page
		page_size
		total
	}
}
fragment ProductListingSupportedFields on ProductListing {
	_id
	name
	org_id
	last_update_date
	deleted
	published
	type
	descriptions {
		long
		short
	}
	contacts {
		email_address
		type
	}
	creation_date
	cert_projects
	support {
		description
		email_address
		phone_number
		url
	}
	legal {
		description
		license_agreement_url
		privacy_policy_url
	}
}
`

func MyProducts(
	ctx_ context.Context,
	client_ graphql.Client,
	orgID int,
	page int,
	pageSize int,
) (*MyProductsResponse, error) {
	req_ := &graphql.Request{
		OpName: "MyProducts",
		Query:  MyProducts_Operation,
		Variables: &__MyProductsInput{
			OrgID:    orgID,
			Page:     page,
			PageSize: pageSize,
		},
	}
	var err_ error

	var data_ MyProductsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by MyProjects.
const MyProjects_Operation = `
query MyProjects ($orgID: Int, $page: Int!, $pageSize: Int!) {
	find_vendor_certification_projects_by_org_id(org_id: $orgID, page_size: $pageSize, page: $page, sort_by: {field:"last_update_date",order:DESC}, filter: {and:[{project_status:{ne:"archived"}}]}) {
		data {
			... ComponentSupportedFields
		}
		error {
			detail
			status
		}
		page
		page_size
		total
	}
}
fragment ComponentSupportedFields on CertificationProject {
	_id
	name
	org_id
	type
	project_status
	certification_status
	creation_date
	last_update_date
	helm_chart {
		chart_name
		repository
		short_description
		long_description
		github_usernames
		distribution_method
	}
	container {
		isv_pid
		distribution_method
		type
		short_description
		repository_name
		repository_description
	}
	contacts {
		email_address
		type
	}
}
`

func MyProjects(
	ctx_ context.Context,
	client_ graphql.Client,
	orgID int,
	page int,
	pageSize int,
) (*MyProjectsResponse, error) {
	req_ := &graphql.Request{
		OpName: "MyProjects",
		Query:  MyProjects_Operation,
		Variables: &__MyProjectsInput{
			OrgID:    orgID,
			Page:     page,
			PageSize: pageSize,
		},
	}
	var err_ error

	var data_ MyProjectsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by NewComponent.
const NewComponent_Operation = `
mutation NewComponent ($new: CertificationProjectInput!) {
	create_certification_project(input: $new) {
		... MutateComponentCommonResponse
	}
}
fragment MutateComponentCommonResponse on CertificationProjectResponse {
	data {
		... ComponentSupportedFields
	}
	error {
		detail
		status
	}
}
fragment ComponentSupportedFields on CertificationProject {
	_id
	name
	org_id
	type
	project_status
	certification_status
	creation_date
	last_update_date
	helm_chart {
		chart_name
		repository
		short_description
		long_description
		github_usernames
		distribution_method
	}
	container {
		isv_pid
		distribution_method
		type
		short_description
		repository_name
		repository_description
	}
	contacts {
		email_address
		type
	}
}
`

func NewComponent(
	ctx_ context.Context,
	client_ graphql.Client,
	new *CertificationProjectInput,
) (*NewComponentResponse, error) {
	req_ := &graphql.Request{
		OpName: "NewComponent",
		Query:  NewComponent_Operation,
		Variables: &__NewComponentInput{
			New: new,
		},
	}
	var err_ error

	var data_ NewComponentResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by NewProductListing.
const NewProductListing_Operation = `
mutation NewProductListing ($new: ProductListingInput) {
	create_product_listing(input: $new) {
		... MutateProductListingCommonResponse
	}
}
fragment MutateProductListingCommonResponse on ProductListingResponse {
	data {
		... ProductListingSupportedFields
	}
	error {
		status
		detail
	}
}
fragment ProductListingSupportedFields on ProductListing {
	_id
	name
	org_id
	last_update_date
	deleted
	published
	type
	descriptions {
		long
		short
	}
	contacts {
		email_address
		type
	}
	creation_date
	cert_projects
	support {
		description
		email_address
		phone_number
		url
	}
	legal {
		description
		license_agreement_url
		privacy_policy_url
	}
}
`

func NewProductListing(
	ctx_ context.Context,
	client_ graphql.Client,
	new *ProductListingInput,
) (*NewProductListingResponse, error) {
	req_ := &graphql.Request{
		OpName: "NewProductListing",
		Query:  NewProductListing_Operation,
		Variables: &__NewProductListingInput{
			New: new,
		},
	}
	var err_ error

	var data_ NewProductListingResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ProductByID.
const ProductByID_Operation = `
query ProductByID ($productID: ObjectIDFilterScalar) {
	get_product_listing(id: $productID) {
		data {
			... ProductListingSupportedFields
		}
		error {
			status
			detail
		}
	}
}
fragment ProductListingSupportedFields on ProductListing {
	_id
	name
	org_id
	last_update_date
	deleted
	published
	type
	descriptions {
		long
		short
	}
	contacts {
		email_address
		type
	}
	creation_date
	cert_projects
	support {
		description
		email_address
		phone_number
		url
	}
	legal {
		description
		license_agreement_url
		privacy_policy_url
	}
}
`

func ProductByID(
	ctx_ context.Context,
	client_ graphql.Client,
	productID string,
) (*ProductByIDResponse, error) {
	req_ := &graphql.Request{
		OpName: "ProductByID",
		Query:  ProductByID_Operation,
		Variables: &__ProductByIDInput{
			ProductID: productID,
		},
	}
	var err_ error

	var data_ ProductByIDResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by SetComponentsForProduct.
const SetComponentsForProduct_Operation = `
mutation SetComponentsForProduct ($productID: ObjectIDFilterScalar, $componentIDs: [ObjectID]) {
	update_product_listing(id: $productID, input: {cert_projects:$componentIDs}) {
		data {
			_id
			cert_projects
			last_update_date
		}
		error {
			status
			detail
		}
	}
}
`

func SetComponentsForProduct(
	ctx_ context.Context,
	client_ graphql.Client,
	productID string,
	componentIDs []string,
) (*SetComponentsForProductResponse, error) {
	req_ := &graphql.Request{
		OpName: "SetComponentsForProduct",
		Query:  SetComponentsForProduct_Operation,
		Variables: &__SetComponentsForProductInput{
			ProductID:    productID,
			ComponentIDs: componentIDs,
		},
	}
	var err_ error

	var data_ SetComponentsForProductResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
